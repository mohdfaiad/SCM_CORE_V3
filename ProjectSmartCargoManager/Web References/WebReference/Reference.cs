//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace ProjectSmartCargoManager.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MessagingServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MessagingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback checkInternetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccetpedBookingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccetpedBookings1OperationCompleted;
        
        private System.Threading.SendOrPostCallback addBookingFromMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback encodeFFAForSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeFFRforSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeFBLForSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeFFMForSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeFSAForSendOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MessagingService() {
            this.Url = global::ProjectSmartCargoManager.Properties.Settings.Default.ProjectSmartCargoManager_WebReference_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkInternetCompletedEventHandler checkInternetCompleted;
        
        /// <remarks/>
        public event getAccetpedBookingsCompletedEventHandler getAccetpedBookingsCompleted;
        
        /// <remarks/>
        public event getAccetpedBookings1CompletedEventHandler getAccetpedBookings1Completed;
        
        /// <remarks/>
        public event addBookingFromMsgCompletedEventHandler addBookingFromMsgCompleted;
        
        /// <remarks/>
        public event encodeFFAForSendCompletedEventHandler encodeFFAForSendCompleted;
        
        /// <remarks/>
        public event EncodeFFRforSendCompletedEventHandler EncodeFFRforSendCompleted;
        
        /// <remarks/>
        public event EncodeFBLForSendCompletedEventHandler EncodeFBLForSendCompleted;
        
        /// <remarks/>
        public event EncodeFFMForSendCompletedEventHandler EncodeFFMForSendCompleted;
        
        /// <remarks/>
        public event EncodeFSAForSendCompletedEventHandler EncodeFSAForSendCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkInternet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkInternet() {
            object[] results = this.Invoke("checkInternet", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkInternetAsync() {
            this.checkInternetAsync(null);
        }
        
        /// <remarks/>
        public void checkInternetAsync(object userState) {
            if ((this.checkInternetOperationCompleted == null)) {
                this.checkInternetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckInternetOperationCompleted);
            }
            this.InvokeAsync("checkInternet", new object[0], this.checkInternetOperationCompleted, userState);
        }
        
        private void OncheckInternetOperationCompleted(object arg) {
            if ((this.checkInternetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkInternetCompleted(this, new checkInternetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccetpedBookings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getAccetpedBookings() {
            object[] results = this.Invoke("getAccetpedBookings", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAccetpedBookingsAsync() {
            this.getAccetpedBookingsAsync(null);
        }
        
        /// <remarks/>
        public void getAccetpedBookingsAsync(object userState) {
            if ((this.getAccetpedBookingsOperationCompleted == null)) {
                this.getAccetpedBookingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccetpedBookingsOperationCompleted);
            }
            this.InvokeAsync("getAccetpedBookings", new object[0], this.getAccetpedBookingsOperationCompleted, userState);
        }
        
        private void OngetAccetpedBookingsOperationCompleted(object arg) {
            if ((this.getAccetpedBookingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccetpedBookingsCompleted(this, new getAccetpedBookingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccetpedBookings1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAccetpedBookings1(string UserName) {
            object[] results = this.Invoke("getAccetpedBookings1", new object[] {
                        UserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAccetpedBookings1Async(string UserName) {
            this.getAccetpedBookings1Async(UserName, null);
        }
        
        /// <remarks/>
        public void getAccetpedBookings1Async(string UserName, object userState) {
            if ((this.getAccetpedBookings1OperationCompleted == null)) {
                this.getAccetpedBookings1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccetpedBookings1OperationCompleted);
            }
            this.InvokeAsync("getAccetpedBookings1", new object[] {
                        UserName}, this.getAccetpedBookings1OperationCompleted, userState);
        }
        
        private void OngetAccetpedBookings1OperationCompleted(object arg) {
            if ((this.getAccetpedBookings1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccetpedBookings1Completed(this, new getAccetpedBookings1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addBookingFromMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addBookingFromMsg(string strMsg) {
            object[] results = this.Invoke("addBookingFromMsg", new object[] {
                        strMsg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addBookingFromMsgAsync(string strMsg) {
            this.addBookingFromMsgAsync(strMsg, null);
        }
        
        /// <remarks/>
        public void addBookingFromMsgAsync(string strMsg, object userState) {
            if ((this.addBookingFromMsgOperationCompleted == null)) {
                this.addBookingFromMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBookingFromMsgOperationCompleted);
            }
            this.InvokeAsync("addBookingFromMsg", new object[] {
                        strMsg}, this.addBookingFromMsgOperationCompleted, userState);
        }
        
        private void OnaddBookingFromMsgOperationCompleted(object arg) {
            if ((this.addBookingFromMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBookingFromMsgCompleted(this, new addBookingFromMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/encodeFFAForSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool encodeFFAForSend(System.Data.DataSet dsData, string FromEmailID, string ToEmailID) {
            object[] results = this.Invoke("encodeFFAForSend", new object[] {
                        dsData,
                        FromEmailID,
                        ToEmailID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void encodeFFAForSendAsync(System.Data.DataSet dsData, string FromEmailID, string ToEmailID) {
            this.encodeFFAForSendAsync(dsData, FromEmailID, ToEmailID, null);
        }
        
        /// <remarks/>
        public void encodeFFAForSendAsync(System.Data.DataSet dsData, string FromEmailID, string ToEmailID, object userState) {
            if ((this.encodeFFAForSendOperationCompleted == null)) {
                this.encodeFFAForSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnencodeFFAForSendOperationCompleted);
            }
            this.InvokeAsync("encodeFFAForSend", new object[] {
                        dsData,
                        FromEmailID,
                        ToEmailID}, this.encodeFFAForSendOperationCompleted, userState);
        }
        
        private void OnencodeFFAForSendOperationCompleted(object arg) {
            if ((this.encodeFFAForSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.encodeFFAForSendCompleted(this, new encodeFFAForSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncodeFFRforSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EncodeFFRforSend(System.Data.DataSet ds, string fromEmail, string ToEmail) {
            object[] results = this.Invoke("EncodeFFRforSend", new object[] {
                        ds,
                        fromEmail,
                        ToEmail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeFFRforSendAsync(System.Data.DataSet ds, string fromEmail, string ToEmail) {
            this.EncodeFFRforSendAsync(ds, fromEmail, ToEmail, null);
        }
        
        /// <remarks/>
        public void EncodeFFRforSendAsync(System.Data.DataSet ds, string fromEmail, string ToEmail, object userState) {
            if ((this.EncodeFFRforSendOperationCompleted == null)) {
                this.EncodeFFRforSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeFFRforSendOperationCompleted);
            }
            this.InvokeAsync("EncodeFFRforSend", new object[] {
                        ds,
                        fromEmail,
                        ToEmail}, this.EncodeFFRforSendOperationCompleted, userState);
        }
        
        private void OnEncodeFFRforSendOperationCompleted(object arg) {
            if ((this.EncodeFFRforSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeFFRforSendCompleted(this, new EncodeFFRforSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncodeFBLForSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EncodeFBLForSend(string POL, string FlightNo, string FlightDate, string fromEmailID, string toEmailID) {
            object[] results = this.Invoke("EncodeFBLForSend", new object[] {
                        POL,
                        FlightNo,
                        FlightDate,
                        fromEmailID,
                        toEmailID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeFBLForSendAsync(string POL, string FlightNo, string FlightDate, string fromEmailID, string toEmailID) {
            this.EncodeFBLForSendAsync(POL, FlightNo, FlightDate, fromEmailID, toEmailID, null);
        }
        
        /// <remarks/>
        public void EncodeFBLForSendAsync(string POL, string FlightNo, string FlightDate, string fromEmailID, string toEmailID, object userState) {
            if ((this.EncodeFBLForSendOperationCompleted == null)) {
                this.EncodeFBLForSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeFBLForSendOperationCompleted);
            }
            this.InvokeAsync("EncodeFBLForSend", new object[] {
                        POL,
                        FlightNo,
                        FlightDate,
                        fromEmailID,
                        toEmailID}, this.EncodeFBLForSendOperationCompleted, userState);
        }
        
        private void OnEncodeFBLForSendOperationCompleted(object arg) {
            if ((this.EncodeFBLForSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeFBLForSendCompleted(this, new EncodeFBLForSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncodeFFMForSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EncodeFFMForSend(string DepartureAirport, string FlightNo, string FlightDate, string fromEmailID, string toEmailID) {
            object[] results = this.Invoke("EncodeFFMForSend", new object[] {
                        DepartureAirport,
                        FlightNo,
                        FlightDate,
                        fromEmailID,
                        toEmailID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeFFMForSendAsync(string DepartureAirport, string FlightNo, string FlightDate, string fromEmailID, string toEmailID) {
            this.EncodeFFMForSendAsync(DepartureAirport, FlightNo, FlightDate, fromEmailID, toEmailID, null);
        }
        
        /// <remarks/>
        public void EncodeFFMForSendAsync(string DepartureAirport, string FlightNo, string FlightDate, string fromEmailID, string toEmailID, object userState) {
            if ((this.EncodeFFMForSendOperationCompleted == null)) {
                this.EncodeFFMForSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeFFMForSendOperationCompleted);
            }
            this.InvokeAsync("EncodeFFMForSend", new object[] {
                        DepartureAirport,
                        FlightNo,
                        FlightDate,
                        fromEmailID,
                        toEmailID}, this.EncodeFFMForSendOperationCompleted, userState);
        }
        
        private void OnEncodeFFMForSendOperationCompleted(object arg) {
            if ((this.EncodeFFMForSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeFFMForSendCompleted(this, new EncodeFFMForSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EncodeFSAForSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EncodeFSAForSend(string AirlinePrefix, string AWBNo, string CarrierCode, string FlightNo, string OperType, string FromEmailID, string ToEmailID) {
            object[] results = this.Invoke("EncodeFSAForSend", new object[] {
                        AirlinePrefix,
                        AWBNo,
                        CarrierCode,
                        FlightNo,
                        OperType,
                        FromEmailID,
                        ToEmailID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeFSAForSendAsync(string AirlinePrefix, string AWBNo, string CarrierCode, string FlightNo, string OperType, string FromEmailID, string ToEmailID) {
            this.EncodeFSAForSendAsync(AirlinePrefix, AWBNo, CarrierCode, FlightNo, OperType, FromEmailID, ToEmailID, null);
        }
        
        /// <remarks/>
        public void EncodeFSAForSendAsync(string AirlinePrefix, string AWBNo, string CarrierCode, string FlightNo, string OperType, string FromEmailID, string ToEmailID, object userState) {
            if ((this.EncodeFSAForSendOperationCompleted == null)) {
                this.EncodeFSAForSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeFSAForSendOperationCompleted);
            }
            this.InvokeAsync("EncodeFSAForSend", new object[] {
                        AirlinePrefix,
                        AWBNo,
                        CarrierCode,
                        FlightNo,
                        OperType,
                        FromEmailID,
                        ToEmailID}, this.EncodeFSAForSendOperationCompleted, userState);
        }
        
        private void OnEncodeFSAForSendOperationCompleted(object arg) {
            if ((this.EncodeFSAForSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeFSAForSendCompleted(this, new EncodeFSAForSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void checkInternetCompletedEventHandler(object sender, checkInternetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkInternetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkInternetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAccetpedBookingsCompletedEventHandler(object sender, getAccetpedBookingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccetpedBookingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccetpedBookingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAccetpedBookings1CompletedEventHandler(object sender, getAccetpedBookings1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccetpedBookings1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccetpedBookings1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addBookingFromMsgCompletedEventHandler(object sender, addBookingFromMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBookingFromMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBookingFromMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void encodeFFAForSendCompletedEventHandler(object sender, encodeFFAForSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class encodeFFAForSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal encodeFFAForSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void EncodeFFRforSendCompletedEventHandler(object sender, EncodeFFRforSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeFFRforSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeFFRforSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void EncodeFBLForSendCompletedEventHandler(object sender, EncodeFBLForSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeFBLForSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeFBLForSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void EncodeFFMForSendCompletedEventHandler(object sender, EncodeFFMForSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeFFMForSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeFFMForSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void EncodeFSAForSendCompletedEventHandler(object sender, EncodeFSAForSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeFSAForSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeFSAForSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591