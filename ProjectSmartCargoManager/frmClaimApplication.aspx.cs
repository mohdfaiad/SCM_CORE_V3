using System;using System.Collections.Generic;using System.Linq;using System.Web;using System.Web.UI;using System.Web.UI.WebControls;using System.Drawing;using System.Configuration;using System.IO;using System.Data.SqlClient;using System.Data;using QID.DataAccess;//using C1.Web.Wijmo.Controls.C1LightBox;namespace ProjectSmartCargoManager{    public partial class frmClaimApplication : System.Web.UI.Page    {        #region Variables        SQLServer db = new SQLServer(Global.GetConnectionString());        #endregion        #region Page Load        protected void Page_Load(object sender, EventArgs e)        {            try            {                if (!IsPostBack)                {                    //Set default flight prefix if any.                    if (Session["awbPrefix"] != null)                        txtAWBNo1.Text = Session["awbPrefix"].ToString();                    LoadingCurrency();                    string url = HttpContext.Current.Request.Url.AbsoluteUri;                    if (url.Contains("Edit"))                    {                        if (Request.QueryString != null)                        {                            string ClaimID = Request.QueryString[0].ToString();                            DataSet ds = db.SelectRecords("Sp_GetClaimDetails", "ClaimID", ClaimID, SqlDbType.BigInt);                            if (ds != null)                            {                                if (ds.Tables.Count > 0)                                {                                    if (ds.Tables[0].Rows.Count > 0)                                    {                                        txtAWBNo1.Text = ds.Tables[0].Rows[0]["AWBPrefix"].ToString();                                        txtAWBNo2.Text = ds.Tables[0].Rows[0]["AWBNumber"].ToString();                                        txtAWBDate.Text = ds.Tables[0].Rows[0]["AWBDate"].ToString();                                        txtClaimAmt.Text = ds.Tables[0].Rows[0]["ClaimAmt"].ToString();                                        txtClaimDetails.Text = ds.Tables[0].Rows[0]["ClaimDetails"].ToString();                                        txtClaimStation.Text = ds.Tables[0].Rows[0]["ClaimStation"].ToString();                                        txtDestination.Text = ds.Tables[0].Rows[0]["Destination"].ToString();                                        txtOrigin.Text = ds.Tables[0].Rows[0]["Origin"].ToString();                                        ddlClaimType.Text = ds.Tables[0].Rows[0]["ClaimType"].ToString();                                        ddlPaymentMode.Text = ds.Tables[0].Rows[0]["PayMode"].ToString();                                        ddlStatus.Text = ds.Tables[0].Rows[0]["Status"].ToString();                                        txtPhone1.Text = ds.Tables[0].Rows[0]["Phone"].ToString();                                        txtPhone2.Text = ds.Tables[0].Rows[0]["Phone1"].ToString();                                        txtPhone3.Text = ds.Tables[0].Rows[0]["Phone2"].ToString();                                        txtMobile1.Text = ds.Tables[0].Rows[0]["Mobile"].ToString();                                        txtMobile2.Text = ds.Tables[0].Rows[0]["Mobile1"].ToString();                                        txtMobile3.Text = ds.Tables[0].Rows[0]["Mobile2"].ToString();                                        txtFax1.Text = ds.Tables[0].Rows[0]["Fax"].ToString();                                        txtFax2.Text = ds.Tables[0].Rows[0]["Fax1"].ToString();                                        txtFax3.Text = ds.Tables[0].Rows[0]["Fax2"].ToString();                                        txtFlightDate.Text = ds.Tables[0].Rows[0]["FlightDate"].ToString();                                        txtFlightNumber1.Text = ds.Tables[0].Rows[0]["AirlinePrefix"].ToString();                                        txtFlightNumber2.Text = ds.Tables[0].Rows[0]["FlightNo"].ToString();                                        txtFullName.Text = ds.Tables[0].Rows[0]["FullName"].ToString();                                        txtHandledBy.Text = ds.Tables[0].Rows[0]["HandledBy"].ToString();                                        txtClaimDate.Text = ds.Tables[0].Rows[0]["ClaimDate"].ToString();                                        ddlCurrency.Text = ds.Tables[0].Rows[0]["Currency"].ToString();                                        if (ds.Tables[1].Rows.Count > 0)                                        {                                            for (int i = 0; i < ds.Tables[1].Rows.Count; i++)                                            {                                                if (i > 0)                                                {                                                    txtHAWB.Text += "," + ds.Tables[1].Rows[i]["HAWBNo"].ToString();                                                }                                                else                                                    txtHAWB.Text = ds.Tables[1].Rows[i]["HAWBNo"].ToString();                                            }                                        }                                        else                                            txtHAWB.Text = "";                                        txtTotalMishandlingPcs.Text = ds.Tables[0].Rows[0]["MishandledPcs"].ToString();                                        txtTotalMishandlingWgt.Text = ds.Tables[0].Rows[0]["MishandledWgt"].ToString();                                        txtTotalPcs.Text = ds.Tables[0].Rows[0]["TotalPcs"].ToString();                                        txtTotalWeight.Text = ds.Tables[0].Rows[0]["TotalWgt"].ToString();                                        txtDisbursedAmount.Text = ds.Tables[0].Rows[0]["DisbursedAmt"].ToString();                                        txtDisbursmentClaimDetails.Text = ds.Tables[0].Rows[0]["DisbursmentDetails"].ToString();                                        txtEmail.Text = ds.Tables[0].Rows[0]["Email"].ToString();                                        txtAddress.Text = ds.Tables[0].Rows[0]["AWBPrefix"].ToString();                                        txtApprovalAmount.Text = ds.Tables[0].Rows[0]["ApprovalAmt"].ToString();                                        txtAWBDate.Text = ds.Tables[0].Rows[0]["AWBDate"].ToString();                                        txtNatureOfGoods.Text = ds.Tables[0].Rows[0]["Commodity"].ToString();                                        lblConsigneeCode.Text = ds.Tables[0].Rows[0]["ConsigneeCode"].ToString();                                        lblConsigneeName.Text = ds.Tables[0].Rows[0]["ConsigneeName"].ToString();                                        lblShipperCode.Text = ds.Tables[0].Rows[0]["ShipperCode"].ToString();                                        lblShipperName.Text = ds.Tables[0].Rows[0]["ShipperName"].ToString();                                           //string strfn = Convert.ToString(DateTime.Now.ToFileTime());                                        //string filepath = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString() + strfn;                                        //byte[] Invoice = (byte[])ds.Tables[0].Rows[0]["Invoice"];                                        //FileStream fs = new FileStream(Server.MapPath(filepath)+".png", FileMode.Create);                                        //fs.Write(Invoice, 0, Invoice.Length);                                        //fs.Flush();                                        //fs.Close();                                        //C1LightBoxItem InvoiceImage = new C1LightBoxItem();                                        //InvoiceImage.ImageUrl = filepath + ".png";                                        //InvoiceImage.LinkUrl = filepath + ".png";                                        //C1LightBox1.Items.Add(InvoiceImage);                                                                                //C1LightBox1.DataBind();                                    }                                }                            }                        }                                            }                    else                        if (url.Contains("View"))                        {                            if (Request.QueryString != null)                            {                                string ClaimID = Request.QueryString[0].ToString();                                DataSet ds = db.SelectRecords("Sp_GetClaimDetails", "ClaimID", ClaimID, SqlDbType.BigInt);                                if (ds != null)                                {                                    if (ds.Tables.Count > 0)                                    {                                        if (ds.Tables[0].Rows.Count > 0)                                        {                                            txtAWBNo1.Text = ds.Tables[0].Rows[0]["AWBPrefix"].ToString();                                            txtAWBNo2.Text = ds.Tables[0].Rows[0]["AWBNumber"].ToString();                                            txtAWBDate.Text = ds.Tables[0].Rows[0]["AWBDate"].ToString();                                            txtClaimAmt.Text = ds.Tables[0].Rows[0]["ClaimAmt"].ToString();                                            txtClaimDetails.Text = ds.Tables[0].Rows[0]["ClaimDetails"].ToString();                                            txtClaimStation.Text = ds.Tables[0].Rows[0]["ClaimStation"].ToString();                                            txtDestination.Text = ds.Tables[0].Rows[0]["Destination"].ToString();                                            txtOrigin.Text = ds.Tables[0].Rows[0]["Origin"].ToString();                                            ddlClaimType.Text = ds.Tables[0].Rows[0]["ClaimType"].ToString();                                            ddlPaymentMode.Text = ds.Tables[0].Rows[0]["PayMode"].ToString();                                            ddlStatus.Text = ds.Tables[0].Rows[0]["Status"].ToString();                                            txtPhone1.Text = ds.Tables[0].Rows[0]["Phone"].ToString();                                            txtPhone2.Text = ds.Tables[0].Rows[0]["Phone1"].ToString();                                            txtPhone3.Text = ds.Tables[0].Rows[0]["Phone2"].ToString();                                            txtMobile1.Text = ds.Tables[0].Rows[0]["Mobile"].ToString();                                            txtMobile2.Text = ds.Tables[0].Rows[0]["Mobile1"].ToString();                                            txtMobile3.Text = ds.Tables[0].Rows[0]["Mobile2"].ToString();                                            txtFax1.Text = ds.Tables[0].Rows[0]["Fax"].ToString();                                            txtFax2.Text = ds.Tables[0].Rows[0]["Fax1"].ToString();                                            txtFax3.Text = ds.Tables[0].Rows[0]["Fax2"].ToString();                                            txtFlightDate.Text = ds.Tables[0].Rows[0]["FlightDate"].ToString();                                            txtFlightNumber1.Text = ds.Tables[0].Rows[0]["AirlinePrefix"].ToString();                                            txtFlightNumber2.Text = ds.Tables[0].Rows[0]["FlightNo"].ToString();                                            txtFullName.Text = ds.Tables[0].Rows[0]["FullName"].ToString();                                            txtHandledBy.Text = ds.Tables[0].Rows[0]["HandledBy"].ToString();                                            txtClaimDate.Text = ds.Tables[0].Rows[0]["ClaimDate"].ToString();                                            ddlCurrency.Text = ds.Tables[0].Rows[0]["Currency"].ToString();                                            if (ds.Tables[1].Rows.Count > 0)                                            {                                                for (int i = 0; i < ds.Tables[1].Rows.Count; i++)                                                {                                                    if (i > 0)                                                    {                                                        txtHAWB.Text += "," + ds.Tables[1].Rows[i]["HAWBNo"].ToString();                                                    }                                                    else                                                        txtHAWB.Text = ds.Tables[1].Rows[i]["HAWBNo"].ToString();                                                }                                            }                                            else                                                txtHAWB.Text = "";                                            txtTotalMishandlingPcs.Text = ds.Tables[0].Rows[0]["MishandledPcs"].ToString();                                            txtTotalMishandlingWgt.Text = ds.Tables[0].Rows[0]["MishandledWgt"].ToString();                                            txtTotalPcs.Text = ds.Tables[0].Rows[0]["TotalPcs"].ToString();                                            txtTotalWeight.Text = ds.Tables[0].Rows[0]["TotalWgt"].ToString();                                            txtDisbursedAmount.Text = ds.Tables[0].Rows[0]["DisbursedAmt"].ToString();                                            txtDisbursmentClaimDetails.Text = ds.Tables[0].Rows[0]["DisbursmentDetails"].ToString();                                            txtEmail.Text = ds.Tables[0].Rows[0]["Email"].ToString();                                            txtAddress.Text = ds.Tables[0].Rows[0]["Address"].ToString();                                            txtApprovalAmount.Text = ds.Tables[0].Rows[0]["ApprovalAmt"].ToString();                                            txtNatureOfGoods.Text = ds.Tables[0].Rows[0]["Commodity"].ToString();                                            lblConsigneeCode.Text = ds.Tables[0].Rows[0]["ConsigneeCode"].ToString();                                            lblConsigneeName.Text = ds.Tables[0].Rows[0]["ConsigneeName"].ToString();                                            lblShipperCode.Text = ds.Tables[0].Rows[0]["ShipperCode"].ToString();                                            lblShipperName.Text = ds.Tables[0].Rows[0]["ShipperName"].ToString();                                               ChangeControlStatus(false);                                            btnSubmit.Visible = false;                                            btnClear.Visible = false;                                            //string strfn = Convert.ToString(DateTime.Now.ToFileTime());                                            //string filepath = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString() + strfn;                                            //byte[] Invoice = (byte[])ds.Tables[0].Rows[0]["Invoice"];                                            //FileStream fs = new FileStream(Server.MapPath(filepath) + ".png", FileMode.Create);                                            //fs.Write(Invoice, 0, Invoice.Length);                                            //fs.Flush();                                            //fs.Close();                                            //C1LightBoxItem InvoiceImage = new C1LightBoxItem();                                            //InvoiceImage.ImageUrl = filepath + ".png";                                            //InvoiceImage.LinkUrl = filepath + ".png";                                            //C1LightBox1.Items.Add(InvoiceImage);                                            //C1LightBox1.                                            //C1LightBox1.DataBind();                                            //C1LightBox1.s                                            //txtAWBNo1.ReadOnly = true;                                            //txtAWBNo2.ReadOnly = true;                                            //txtAWBDate.ReadOnly = true;                                            //txtClaimAmt.ReadOnly = true;                                            //txtClaimDetails.ReadOnly = true;                                            //txtClaimStation.ReadOnly = true;                                            //txtDestination.ReadOnly = true;                                            //txtOrigin.ReadOnly = true;                                            //ddlClaimType.Enabled = false;                                            //ddlPaymentMode.Enabled = false;                                            //ddlStatus.Enabled = false;                                            //txtPhone1.ReadOnly = true;                                            //txtPhone2.ReadOnly = true;                                            //txtPhone3.ReadOnly = true;                                            //txtMobile1.ReadOnly = true;                                            //txtMobile2.ReadOnly = true;                                            //txtMobile3.ReadOnly = true;                                            //txtFax1.ReadOnly = true;                                            //txtFax2.ReadOnly = true;                                            //txtFax3.ReadOnly = true;                                            //txtFlightDate.ReadOnly = true;                                            //txtFlightNumber1.ReadOnly = true;                                            //txtFlightNumber2.ReadOnly = true;                                            //txtFullName.ReadOnly = true;                                            //txtHandledBy.ReadOnly = true;                                            //txtHAWB.ReadOnly = true;                                            //txtTotalMishandlingPcs.ReadOnly = true;                                            //txtTotalMishandlingWgt.ReadOnly = true;                                            //txtTotalPcs.ReadOnly = true;                                            //txtTotalWeight.ReadOnly = true;                                            //txtDisbursedAmount.ReadOnly = true;                                            //txtDisbursmentClaimDetails.ReadOnly = true;                                            //txtEmail.ReadOnly = true;                                            //txtAddress.ReadOnly = true;                                            //txtApprovalAmount.ReadOnly = true;                                            //txtAWBDate.ReadOnly = true;                                            //txtNatureOfGoods.ReadOnly = true;                                        }                                    }                                }                            }                        }                        else                        {                            btnList.Visible = true;                        }                }            }            catch (Exception ex)            { }                    }        #endregion        #region Button Submit        protected void btnSubmit_Click(object sender, EventArgs e)        {            try            {                lblStatus.Text = "";                                if ((txtMobile1.Text != "" && txtMobile2.Text != "" && txtMobile3.Text != "") || (txtPhone1.Text != "" && txtPhone2.Text != "" && txtPhone3.Text != ""))                {                    object[] QueryValues = new object[43];                    byte[] arr = new byte[0];                    string Currency = "";                    if (ddlCurrency.SelectedIndex == 0)                    {                        lblStatus.Text = "Please Select Currency...";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    else                    {                        Currency = ddlCurrency.SelectedItem.Value;                    }                    #region FileUpload                     try                    {                        if (FileUpload_Invoice.HasFile)                        {                                                        string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_Invoice.FileName);                            byte[] Invoice = new byte[FileUpload_Invoice.PostedFile.ContentLength];                           HttpPostedFile uploadedInvoiceImage = FileUpload_Invoice.PostedFile;                            uploadedInvoiceImage.InputStream.Read(Invoice, 0, (int)FileUpload_Invoice.PostedFile.ContentLength);                            QueryValues[22] = Invoice;                            QueryValues[35] = FileUpload_Invoice.FileName;                                                    }                        else                        {                            QueryValues[22] = arr;                            QueryValues[35] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUpload_PackagingList.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_PackagingList.FileName);                            byte[] PackagingList = new byte[FileUpload_PackagingList.PostedFile.ContentLength];                           HttpPostedFile uploadedPackagingListImage = FileUpload_PackagingList.PostedFile;                            uploadedPackagingListImage.InputStream.Read(PackagingList, 0, (int)FileUpload_PackagingList.PostedFile.ContentLength);                            //FileUpload_PackagingList.SaveAs(Server.MapPath(filename));                            QueryValues[23] = PackagingList;                            QueryValues[36] = FileUpload_PackagingList.FileName;                        }                        else                        {                            QueryValues[23] = arr;                            QueryValues[36] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUpload_CustomsReport.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_CustomsReport.FileName);                            byte[] CustomsReport = new byte[FileUpload_CustomsReport.PostedFile.ContentLength];                           HttpPostedFile uploadedCustomsReportImage = FileUpload_CustomsReport.PostedFile;                            uploadedCustomsReportImage.InputStream.Read(CustomsReport, 0, (int)FileUpload_CustomsReport.PostedFile.ContentLength);                            //FileUpload_CustomsReport.SaveAs(Server.MapPath(filename));                            QueryValues[24] = CustomsReport;                            QueryValues[37] = FileUpload_CustomsReport.FileName;                        }                        else                        {                            QueryValues[24] = arr;                            QueryValues[37] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUpload_SubrogationLetter.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_SubrogationLetter.FileName);                            byte[] SubrogationLetter = new byte[FileUpload_SubrogationLetter.PostedFile.ContentLength];                          HttpPostedFile  uploadedSubrogationLetterImage = FileUpload_SubrogationLetter.PostedFile;                            uploadedSubrogationLetterImage.InputStream.Read(SubrogationLetter, 0, (int)FileUpload_SubrogationLetter.PostedFile.ContentLength);                            //FileUpload_SubrogationLetter.SaveAs(Server.MapPath(filename));                            QueryValues[25] = SubrogationLetter;                            QueryValues[38] = FileUpload_SubrogationLetter.FileName;                        }                        else                        {                            QueryValues[25] = arr;                            QueryValues[38] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUploadSurveyReport.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUploadSurveyReport.FileName);                            byte[] SurveyReport = new byte[FileUploadSurveyReport.PostedFile.ContentLength];                          HttpPostedFile  uploadedSurveyReportImage = FileUploadSurveyReport.PostedFile;                            uploadedSurveyReportImage.InputStream.Read(SurveyReport, 0, (int)FileUploadSurveyReport.PostedFile.ContentLength);                            //FileUploadSurveyReport.SaveAs(Server.MapPath(filename));                            QueryValues[26] = SurveyReport;                            QueryValues[39] = FileUploadSurveyReport.FileName;                                                  }                        else                        {                            QueryValues[26] = arr;                            QueryValues[39] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUpload_AuthorityReport.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_AuthorityReport.FileName);                            byte[] AuthorityReport = new byte[FileUpload_AuthorityReport.PostedFile.ContentLength];                            HttpPostedFile uploadedAuthorityReportImage = FileUpload_AuthorityReport.PostedFile;                            uploadedAuthorityReportImage.InputStream.Read(AuthorityReport, 0, (int)FileUpload_AuthorityReport.PostedFile.ContentLength);                            QueryValues[27] = AuthorityReport;                            QueryValues[40] = FileUpload_AuthorityReport.FileName;                            //FileUpload_AuthorityReport.SaveAs(Server.MapPath(filename));                                                   }                        else                        {                            QueryValues[27] = arr;                            QueryValues[40] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUpload_StationReport.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_StationReport.FileName);                            byte[] StationReport = new byte[FileUpload_StationReport.PostedFile.ContentLength];                            HttpPostedFile uploadedStationReportImage = FileUpload_StationReport.PostedFile;                            uploadedStationReportImage.InputStream.Read(StationReport, 0, (int)FileUpload_StationReport.PostedFile.ContentLength);                            //FileUpload_StationReport.SaveAs(Server.MapPath(filename));                            QueryValues[28] = StationReport;                            QueryValues[41] = FileUpload_StationReport.FileName;                        }                        else                        {                            QueryValues[28] = arr;                            QueryValues[41] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        if (FileUpload_Picture.HasFile)                        {                            string path = ConfigurationManager.AppSettings["DocumentsClaimPath"].ToString();                            string filename = Path.Combine(path, FileUpload_Picture.FileName);                            byte[] Picture = new byte[FileUpload_Picture.PostedFile.ContentLength];                          HttpPostedFile  uploadedPictureImage = FileUpload_Picture.PostedFile;                            uploadedPictureImage.InputStream.Read(Picture, 0, (int)FileUpload_Picture.PostedFile.ContentLength);                            //FileUpload_Picture.SaveAs(Server.MapPath(filename));                            QueryValues[29] = Picture;                            QueryValues[42] = FileUpload_Picture.FileName;                                                   }                        else                        {                            QueryValues[29] = arr;                            QueryValues[42] = string.Empty;                        }                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Uploading Failed";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    #endregion                    string AWBPrefix = txtAWBNo1.Text.Trim();                    string ClaimType = ddlClaimType.SelectedItem.Text;                    string ClaimDetails = txtClaimDetails.Text;                    string TotalWeight = txtTotalWeight.Text;                    string TotalPcs = txtTotalPcs.Text;                    string TotalMisWgt = txtTotalMishandlingWgt.Text;                    string TotalMisPcs = txtTotalMishandlingPcs.Text;                    string NatureOfGoods = txtNatureOfGoods.Text;                    string ClaimAmt = txtClaimAmt.Text;                    string ApprovalAmt = "";                    if (txtApprovalAmount.Text != "")                    {                        ApprovalAmt = txtApprovalAmount.Text;                    }                    else                        ApprovalAmt = "0";                    string PaymentMode = ddlPaymentMode.SelectedItem.Text;                    string DisbursedAmt = "";                    if (txtDisbursedAmount.Text != "")                    {                        DisbursedAmt = txtDisbursedAmount.Text;                    }                    else                        DisbursedAmt = "0";                    string DisbursedDetails = txtDisbursmentClaimDetails.Text;                    string ClaimStation = txtClaimStation.Text;                    string Status = ddlStatus.SelectedItem.Text;                    string HandledBy = txtHandledBy.Text;                    string FullName = txtFullName.Text;                    string Address = txtAddress.Text;                    string Phone = txtPhone1.Text + txtPhone2.Text + txtPhone3.Text;                    string Mobile = txtMobile1.Text + txtMobile2.Text + txtMobile3.Text;                    string Fax = txtFax1.Text + txtFax2.Text + txtFax3.Text;                    string Email = txtEmail.Text;                    string AWBNo = txtAWBNo2.Text;                    string AWBDate = "";                    string ClaimDate = "";                    try                    {                        ClaimDate = DateTime.ParseExact(txtClaimDate.Text, "dd/MM/yyyy", null).ToString("MM/dd/yyyy");                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Please enter ClaimDate in Correct format! EX:dd/MM/yyyy";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    try                    {                        AWBDate = DateTime.ParseExact(txtAWBDate.Text, "dd/MM/yyyy", null).ToString("MM/dd/yyyy");                    }                    catch (Exception ex)                    {                        lblStatus.Text = "Please enter AWBDate in Correct format! EX:dd/MM/yyyy";                        lblStatus.ForeColor = Color.Red;                        return;                    }                    string[] QueryNames = new string[43];                    QueryNames[0] = "ClaimType";                    QueryNames[1] = "ClaimDetails";                    QueryNames[2] = "TotalWgt";                    QueryNames[3] = "TotalPcs";                    QueryNames[4] = "TotalMisWgt";                    QueryNames[5] = "TotalMisPcs";                    QueryNames[6] = "Commodity";                    QueryNames[7] = "ClaimAmt";                    QueryNames[8] = "ApprovalAmt";                    QueryNames[9] = "PayMode";                    QueryNames[10] = "DisAmt";                    QueryNames[11] = "DisDetails";                    QueryNames[12] = "ClaimStation";                    QueryNames[13] = "Status";                    QueryNames[14] = "HandledBy";                    QueryNames[15] = "FullName";                    QueryNames[16] = "Address";                    QueryNames[17] = "Phone";                    QueryNames[18] = "Mobile";                    QueryNames[19] = "Fax";                    QueryNames[20] = "Email";                    QueryNames[21] = "AWBNo";                    QueryNames[22] = "Invoice";                    QueryNames[23] = "PkgList";                    QueryNames[24] = "CustReport";                    QueryNames[25] = "SubLetter";                    QueryNames[26] = "SurveyReport";                    QueryNames[27] = "AuthReport";                    QueryNames[28] = "StationReport";                    QueryNames[29] = "Picture";                    QueryNames[30] = "UserName";                    QueryNames[31] = "ClaimDate";                    QueryNames[32] = "AWBDate";                    QueryNames[33] = "AWBPrefix";                    QueryNames[34] = "Currency";                    QueryNames[35] = "InvoiceName";                    QueryNames[36] = "PkgListName";                    QueryNames[37] = "CustReportName";                    QueryNames[38] = "SubLetterName";                    QueryNames[39] = "SurveyReportName";                    QueryNames[40] = "AuthReportName";                    QueryNames[41] = "StationReportName";                    QueryNames[42] = "PictureName";                                        QueryValues[0] = ClaimType;                    QueryValues[1] = ClaimDetails;                    QueryValues[2] = TotalWeight;                    QueryValues[3] = TotalPcs;                    QueryValues[4] = TotalMisWgt;                    QueryValues[5] = TotalMisPcs;                    QueryValues[6] = NatureOfGoods;                    QueryValues[7] = ClaimAmt;                    QueryValues[8] = ApprovalAmt;                    QueryValues[9] = PaymentMode;                    QueryValues[10] = DisbursedAmt;                    QueryValues[11] = DisbursedDetails;                    QueryValues[12] = ClaimStation;                    QueryValues[13] = Status;                    QueryValues[14] = HandledBy;                    QueryValues[15] = FullName;                    QueryValues[16] = Address;                    QueryValues[17] = Phone;                    QueryValues[18] = Mobile;                    QueryValues[19] = Fax;                    QueryValues[20] = Email;                    QueryValues[21] = AWBNo;                    QueryValues[30] = Session["UserName"].ToString();                    QueryValues[31] = ClaimDate;                    QueryValues[32] = AWBDate;                    QueryValues[33] = AWBPrefix;                    QueryValues[34] = Currency;                    SqlDbType[] QueryTypes = new SqlDbType[43];                    QueryTypes[0] = SqlDbType.VarChar;                    QueryTypes[1] = SqlDbType.VarChar;                    QueryTypes[2] = SqlDbType.Decimal;                    QueryTypes[3] = SqlDbType.Int;                    QueryTypes[4] = SqlDbType.Decimal;                    QueryTypes[5] = SqlDbType.Int;                    QueryTypes[6] = SqlDbType.VarChar;                    QueryTypes[7] = SqlDbType.Decimal;                    QueryTypes[8] = SqlDbType.Decimal;                    QueryTypes[9] = SqlDbType.VarChar;                    QueryTypes[10] = SqlDbType.Decimal;                    QueryTypes[11] = SqlDbType.VarChar;                    QueryTypes[12] = SqlDbType.VarChar;                    QueryTypes[13] = SqlDbType.VarChar;                    QueryTypes[14] = SqlDbType.VarChar;                    QueryTypes[15] = SqlDbType.VarChar;                    QueryTypes[16] = SqlDbType.VarChar;                    QueryTypes[17] = SqlDbType.VarChar;                    QueryTypes[18] = SqlDbType.VarChar;                    QueryTypes[19] = SqlDbType.VarChar;                    QueryTypes[20] = SqlDbType.VarChar;                    QueryTypes[21] = SqlDbType.VarChar;                    QueryTypes[22] = SqlDbType.Image;                    QueryTypes[23] = SqlDbType.Image;                    QueryTypes[24] = SqlDbType.Image;                    QueryTypes[25] = SqlDbType.Image;                    QueryTypes[26] = SqlDbType.Image;                    QueryTypes[27] = SqlDbType.Image;                    QueryTypes[28] = SqlDbType.Image;                    QueryTypes[29] = SqlDbType.Image;                    QueryTypes[30] = SqlDbType.VarChar;                    QueryTypes[31] = SqlDbType.DateTime;                    QueryTypes[32] = SqlDbType.DateTime;                    QueryTypes[33] = SqlDbType.VarChar;                    QueryTypes[34] = SqlDbType.VarChar;                    QueryTypes[35] = SqlDbType.VarChar;                    QueryTypes[36] = SqlDbType.VarChar;                    QueryTypes[37] = SqlDbType.VarChar;                    QueryTypes[38] = SqlDbType.VarChar;                    QueryTypes[39] = SqlDbType.VarChar;                    QueryTypes[40] = SqlDbType.VarChar;                    QueryTypes[41] = SqlDbType.VarChar;                    QueryTypes[42] = SqlDbType.VarChar;                    string result=db.GetStringByProcedure("sp_UpdateClaimDetails", QueryNames, QueryValues, QueryTypes);                    if (result=="True")                    {                        lblStatus.Text = "Claim Application Sent Successfully";                        lblStatus.ForeColor = Color.Green;                    }                    else                        if (result == "Air Waybill does not exist!")                        {                            lblStatus.Text = result;                            lblStatus.ForeColor = Color.Red;                        }                        else                        {                            lblStatus.Text = "Claim Application could not be sent!";                            lblStatus.ForeColor = Color.Red;                        }                }                else                {                    lblStatus.Text = "Please Enter Phone Number OR Mobile Number";                    lblStatus.ForeColor = Color.Red;                }            }            catch (Exception ex)            {                lblStatus.Text = ex.Message;                lblStatus.ForeColor = Color.Red;            }        }        #endregion        #region  Origin        protected void txtOrigin_TextChanged(object sender, EventArgs e)        {            try            {                if (txtOrigin.Text.Length > 4)                {                    txtOrigin.Text = txtOrigin.Text.Substring(txtOrigin.Text.Length - 4, 3);                }            }            catch (Exception ex)            { }        }        #endregion Origin        #region Destination        protected void txtDestination_TextChanged(object sender, EventArgs e)        {            try            {                if (txtDestination.Text.Length > 4)                {                    txtDestination.Text = txtDestination.Text.Substring(txtDestination.Text.Length - 4, 3);                }                            }            catch (Exception ex)            { }        }        #endregion Destination        #region newMethod        [System.Web.Services.WebMethod]        [System.Web.Script.Services.ScriptMethod]        public static string[] GetStation(string prefixText, int count)        {            string con = Global.GetConnectionString();            // SqlConnection con = new SqlConnection("connection string");            //SELECT FlightID from dbo.AirlineSchedule where FlightID like '"+ prefixText +"%' or FlightID like '"+ prefixText +"%'            SqlDataAdapter dad = new SqlDataAdapter("SELECT AirportName  +'   ('+ AirportCode +')' as AirportCode from AirportMaster where AirportName like '" + prefixText + "%' or AirportCode like '" + prefixText + "%'", con);            DataSet ds = new DataSet();            dad.Fill(ds);            List<string> list = new List<string>(ds.Tables[0].Rows.Count);            foreach (DataRow dr in ds.Tables[0].Rows)            {                list.Add(dr[0].ToString());            }            return list.ToArray();        }        #endregion        #region Button Clear        protected void btnClear_Click(object sender, EventArgs e)        {            try            {                //txtPhone1.Text = "";                //txtPhone2.Text = "";                //txtPhone3.Text = "";                //txtTotalMishandlingPcs.Text="";                //txtTotalMishandlingWgt.Text="";                //txtTotalPcs.Text="";                //txtTotalWeight.Text="";                //lblStatus.Text="";                //txtOrigin.Text="";                //txtNatureOfGoods.Text="";                //txtMobile3.Text="";                //txtMobile2.Text="";                //txtMobile1.Text="";                //txtFullName.Text="";                //txtFlightNumber2.Text="";                //txtFlightNumber1.Text="SG";                //txtFlightDate.Text="";                //txtFax3.Text="";                //txtFax2.Text="";                //txtFax1.Text="";                //txtEmail.Text="";                //txtDestination.Text="";                //txtClaimDetails.Text="";                //txtClaimAmt.Text="";                //txtAWBNo2.Text="";                //txtAWBNo1.Text="SG";                //txtAWBDate.Text="";                //txtAddress.Text="";                ClearControls();                                                          }            catch (Exception ex)            { }        }        #endregion        #region Getting AWB Details        protected void txtAWBNo2_TextChanged(object sender, EventArgs e)        {            try            {                lblStatus.Text = "";                string AWBNo = txtAWBNo2.Text;                string HAWBNo = "";                DataSet ds = db.SelectRecords("Sp_GetClaimAWBDetails", "AWBNo", AWBNo, SqlDbType.VarChar);                if (ds != null)                {                    if (ds.Tables.Count > 0)                    {                        if (ds.Tables[0].Rows.Count > 0)                        {                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)                            {                                if (i > 0)                                {                                    HAWBNo += "," + ds.Tables[0].Rows[i]["HAWBNo"].ToString();                                }                                else                                    HAWBNo = ds.Tables[0].Rows[i]["HAWBNo"].ToString();                            }                            txtHAWB.Text = HAWBNo;                        }                    }                                       if (ds.Tables[1].Rows.Count > 0)                    {                        txtOrigin.Text = ds.Tables[1].Rows[0]["Origin"].ToString();                        txtDestination.Text = ds.Tables[1].Rows[0]["Destination"].ToString();                        txtAWBDate.Text = ds.Tables[1].Rows[0]["AWBDate"].ToString();                        txtFlightNumber1.Text = ds.Tables[1].Rows[0]["AirlinePrefix"].ToString();                        txtFlightNumber2.Text = ds.Tables[1].Rows[0]["FlightNo"].ToString();                        txtFlightDate.Text = ds.Tables[1].Rows[0]["FlightDate"].ToString();                        txtClaimDate.Text = Session["IT"] != null ? ((DateTime)Session["IT"]).ToString("dd/MM/yyyy") : string.Empty;                        txtClaimStation.Text = Session["Station"] != null ? Session["Station"].ToString() : string.Empty;                        txtTotalPcs.Text = ds.Tables[1].Rows[0]["Pieces"].ToString();                        txtTotalWeight.Text = ds.Tables[1].Rows[0]["Weight"].ToString();                        ddlCurrency.Text = ds.Tables[1].Rows[0]["Currency"].ToString();                        txtNatureOfGoods.Text = ds.Tables[1].Rows[0]["CommodityCode"].ToString();                        lblConsigneeCode.Text = ds.Tables[1].Rows[0]["ConsigneeCode"].ToString();                        lblConsigneeName.Text = ds.Tables[1].Rows[0]["ConsigneeName"].ToString();                        lblShipperCode.Text = ds.Tables[1].Rows[0]["ShipperCode"].ToString();                        lblShipperName.Text = ds.Tables[1].Rows[0]["ShipperName"].ToString();                                            }                    else                    {                        lblStatus.Text = "AWB not present!";                        lblStatus.ForeColor = Color.Red;                        return;                    }                }                             }            catch (Exception ex)            {                lblStatus.Text = ex.Message;                lblStatus.ForeColor = Color.Red;            }        }        #endregion        #region Enable/Disable And Clear All Controls        private void ChangeControlStatus(bool status)        {            foreach (Control c in this.Form.Controls)                foreach (Control ctrl in c.Controls)                    if (ctrl is TextBox)                        ((TextBox)ctrl).Enabled = status;                    else if (ctrl is Button)                        ((Button)ctrl).Enabled = status;                    else if (ctrl is RadioButton)                        ((RadioButton)ctrl).Enabled = status;                    else if (ctrl is ImageButton)                        ((ImageButton)ctrl).Enabled = status;                    else if (ctrl is CheckBox)                        ((CheckBox)ctrl).Enabled = status;                    else if (ctrl is DropDownList)                        ((DropDownList)ctrl).Enabled = status;                    else if (ctrl is FileUpload)                        ((FileUpload)ctrl).Enabled = status;                    //else if (ctrl is HyperLink)                    //    ((HyperLink)ctrl).Enabled = status;        }        private void ClearControls()        {            foreach (Control c in this.Form.Controls)            {                foreach (Control ctrl in c.Controls)                {                    if (ctrl is TextBox)                    {                        ((TextBox)ctrl).Text = string.Empty;                    }                    if (ctrl is DropDownList)                    {                        ((DropDownList)ctrl).SelectedIndex = 0;                    }                }            }        }        #endregion        #region Button List        protected void btnList_Click(object sender, EventArgs e)        {            try            {                lblStatus.Text = "";                string AWBNo = txtAWBNo1.Text + txtAWBNo2.Text;                string HAWBNo = "";                DataSet ds = db.SelectRecords("Sp_GetClaimAWBDetails", "AWBNo", AWBNo, SqlDbType.VarChar);                if (ds != null)                {                    if (ds.Tables.Count > 0)                    {                        if (ds.Tables[0].Rows.Count > 0)                        {                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)                            {                                if (i > 0)                                {                                    HAWBNo += "," + ds.Tables[0].Rows[i]["HAWBNo"].ToString();                                }                                else                                    HAWBNo = ds.Tables[0].Rows[i]["HAWBNo"].ToString();                            }                            txtHAWB.Text = HAWBNo;                        }                    }                    if (ds.Tables[1].Rows.Count > 0)                    {                        txtOrigin.Text = ds.Tables[1].Rows[0]["Origin"].ToString();                        txtDestination.Text = ds.Tables[1].Rows[0]["Destination"].ToString();                        txtAWBDate.Text = ds.Tables[1].Rows[0]["AWBDate"].ToString();                        txtFlightNumber1.Text = ds.Tables[1].Rows[0]["AirlinePrefix"].ToString();                        txtFlightNumber2.Text = ds.Tables[1].Rows[0]["FlightNo"].ToString();                        txtFlightDate.Text = ds.Tables[1].Rows[0]["FlightDate"].ToString();                        txtClaimDate.Text = Session["IT"] != null ? ((DateTime)Session["IT"]).ToString("dd/MM/yyyy") : string.Empty;                        txtClaimStation.Text = Session["Station"] != null ? Session["Station"].ToString() : string.Empty;                        txtTotalPcs.Text = ds.Tables[1].Rows[0]["Pieces"].ToString();                        txtTotalWeight.Text = ds.Tables[1].Rows[0]["Weight"].ToString();                        ddlCurrency.Text = ds.Tables[1].Rows[0]["Currency"].ToString();                        txtNatureOfGoods.Text = ds.Tables[1].Rows[0]["CommodityCode"].ToString();                        lblConsigneeCode.Text = ds.Tables[1].Rows[0]["ConsigneeCode"].ToString();                        lblConsigneeName.Text = ds.Tables[1].Rows[0]["ConsigneeName"].ToString();                        lblShipperCode.Text = ds.Tables[1].Rows[0]["ShipperCode"].ToString();                        lblShipperName.Text = ds.Tables[1].Rows[0]["ShipperName"].ToString();                    }                    else                    {                        lblStatus.Text = "AWB not present!";                        lblStatus.ForeColor = Color.Red;                        return;                    }                }            }            catch (Exception ex)            {                lblStatus.Text = ex.Message;                lblStatus.ForeColor = Color.Red;            }        }        #endregion        #region Loading Currency Dropdown        public void LoadingCurrency()        {            try            {                lblStatus.Text = "";                DataSet ds = db.SelectRecords("sp_GetCurrency");                if (ds != null)                {                    if (ds.Tables.Count > 0)                    {                        if (ds.Tables[0].Rows.Count > 0)                        {                            ddlCurrency.DataSource = ds;                            ddlCurrency.DataTextField = "Value";                            ddlCurrency.DataValueField = "Value";                            ddlCurrency.DataBind();                            ddlCurrency.Items.Insert(0, "Select");                        }                    }                }            }            catch (Exception ex)            { }        }        #endregion    }}