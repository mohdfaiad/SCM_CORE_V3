//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ProjectSmartCargoManager.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsORTransaction")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsORTransaction : global::System.Data.DataSet {
        
        private dtORTransactionDetailsDataTable tabledtORTransactionDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsORTransaction() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsORTransaction(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtORTransactionDetails"] != null)) {
                    base.Tables.Add(new dtORTransactionDetailsDataTable(ds.Tables["dtORTransactionDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtORTransactionDetailsDataTable dtORTransactionDetails {
            get {
                return this.tabledtORTransactionDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsORTransaction cln = ((dsORTransaction)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtORTransactionDetails"] != null)) {
                    base.Tables.Add(new dtORTransactionDetailsDataTable(ds.Tables["dtORTransactionDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtORTransactionDetails = ((dtORTransactionDetailsDataTable)(base.Tables["dtORTransactionDetails"]));
            if ((initTable == true)) {
                if ((this.tabledtORTransactionDetails != null)) {
                    this.tabledtORTransactionDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsORTransaction";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsORTransaction.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtORTransactionDetails = new dtORTransactionDetailsDataTable();
            base.Tables.Add(this.tabledtORTransactionDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtORTransactionDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsORTransaction ds = new dsORTransaction();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtORTransactionDetailsRowChangeEventHandler(object sender, dtORTransactionDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtORTransactionDetailsDataTable : global::System.Data.TypedTableBase<dtORTransactionDetailsRow> {
            
            private global::System.Data.DataColumn columnIssuingOffice;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnPaymentDate;
            
            private global::System.Data.DataColumn columnORRecieptNo;
            
            private global::System.Data.DataColumn columnAWBPrefix;
            
            private global::System.Data.DataColumn columnAWBNumber;
            
            private global::System.Data.DataColumn columnShipperName;
            
            private global::System.Data.DataColumn columnCurrencyCode;
            
            private global::System.Data.DataColumn columnFOP;
            
            private global::System.Data.DataColumn columnTINNumber;
            
            private global::System.Data.DataColumn columnFreightAndOthers;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnVatableSale;
            
            private global::System.Data.DataColumn columnVATExempt;
            
            private global::System.Data.DataColumn columnVATZeroRated;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnCollectedAmount;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedOn;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedOn;
            
            private global::System.Data.DataColumn columnTDS;
            
            private global::System.Data.DataColumn columnAWBShipmentType;
            
            private global::System.Data.DataColumn columnAWBStatus;
            
            private global::System.Data.DataColumn columnORStatus;
            
            private global::System.Data.DataColumn columnLogo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtORTransactionDetailsDataTable() {
                this.TableName = "dtORTransactionDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtORTransactionDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtORTransactionDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuingOfficeColumn {
                get {
                    return this.columnIssuingOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentDateColumn {
                get {
                    return this.columnPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORRecieptNoColumn {
                get {
                    return this.columnORRecieptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBPrefixColumn {
                get {
                    return this.columnAWBPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBNumberColumn {
                get {
                    return this.columnAWBNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperNameColumn {
                get {
                    return this.columnShipperName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyCodeColumn {
                get {
                    return this.columnCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FOPColumn {
                get {
                    return this.columnFOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TINNumberColumn {
                get {
                    return this.columnTINNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightAndOthersColumn {
                get {
                    return this.columnFreightAndOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VatableSaleColumn {
                get {
                    return this.columnVatableSale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATExemptColumn {
                get {
                    return this.columnVATExempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATZeroRatedColumn {
                get {
                    return this.columnVATZeroRated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CollectedAmountColumn {
                get {
                    return this.columnCollectedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedOnColumn {
                get {
                    return this.columnCreatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedOnColumn {
                get {
                    return this.columnModifiedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSColumn {
                get {
                    return this.columnTDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBShipmentTypeColumn {
                get {
                    return this.columnAWBShipmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBStatusColumn {
                get {
                    return this.columnAWBStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORStatusColumn {
                get {
                    return this.columnORStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtORTransactionDetailsRow this[int index] {
                get {
                    return ((dtORTransactionDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dtORTransactionDetailsRowChangeEventHandler dtORTransactionDetailsRowChanging;
            
            public event dtORTransactionDetailsRowChangeEventHandler dtORTransactionDetailsRowChanged;
            
            public event dtORTransactionDetailsRowChangeEventHandler dtORTransactionDetailsRowDeleting;
            
            public event dtORTransactionDetailsRowChangeEventHandler dtORTransactionDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtORTransactionDetailsRow(dtORTransactionDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtORTransactionDetailsRow AdddtORTransactionDetailsRow(
                        string IssuingOffice, 
                        string Destination, 
                        string PaymentDate, 
                        string ORRecieptNo, 
                        string AWBPrefix, 
                        string AWBNumber, 
                        string ShipperName, 
                        string CurrencyCode, 
                        string FOP, 
                        string TINNumber, 
                        string FreightAndOthers, 
                        string Total, 
                        string VatableSale, 
                        string VATExempt, 
                        string VATZeroRated, 
                        string VAT, 
                        string CollectedAmount, 
                        string CreatedBy, 
                        string CreatedOn, 
                        string ModifiedBy, 
                        string ModifiedOn, 
                        string TDS, 
                        string AWBShipmentType, 
                        string AWBStatus, 
                        string ORStatus, 
                        byte[] Logo) {
                dtORTransactionDetailsRow rowdtORTransactionDetailsRow = ((dtORTransactionDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IssuingOffice,
                        Destination,
                        PaymentDate,
                        ORRecieptNo,
                        AWBPrefix,
                        AWBNumber,
                        ShipperName,
                        CurrencyCode,
                        FOP,
                        TINNumber,
                        FreightAndOthers,
                        Total,
                        VatableSale,
                        VATExempt,
                        VATZeroRated,
                        VAT,
                        CollectedAmount,
                        CreatedBy,
                        CreatedOn,
                        ModifiedBy,
                        ModifiedOn,
                        TDS,
                        AWBShipmentType,
                        AWBStatus,
                        ORStatus,
                        Logo};
                rowdtORTransactionDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtORTransactionDetailsRow);
                return rowdtORTransactionDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtORTransactionDetailsDataTable cln = ((dtORTransactionDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtORTransactionDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIssuingOffice = base.Columns["IssuingOffice"];
                this.columnDestination = base.Columns["Destination"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnORRecieptNo = base.Columns["ORRecieptNo"];
                this.columnAWBPrefix = base.Columns["AWBPrefix"];
                this.columnAWBNumber = base.Columns["AWBNumber"];
                this.columnShipperName = base.Columns["ShipperName"];
                this.columnCurrencyCode = base.Columns["CurrencyCode"];
                this.columnFOP = base.Columns["FOP"];
                this.columnTINNumber = base.Columns["TINNumber"];
                this.columnFreightAndOthers = base.Columns["FreightAndOthers"];
                this.columnTotal = base.Columns["Total"];
                this.columnVatableSale = base.Columns["VatableSale"];
                this.columnVATExempt = base.Columns["VATExempt"];
                this.columnVATZeroRated = base.Columns["VATZeroRated"];
                this.columnVAT = base.Columns["VAT"];
                this.columnCollectedAmount = base.Columns["CollectedAmount"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedOn = base.Columns["ModifiedOn"];
                this.columnTDS = base.Columns["TDS"];
                this.columnAWBShipmentType = base.Columns["AWBShipmentType"];
                this.columnAWBStatus = base.Columns["AWBStatus"];
                this.columnORStatus = base.Columns["ORStatus"];
                this.columnLogo = base.Columns["Logo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIssuingOffice = new global::System.Data.DataColumn("IssuingOffice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuingOffice);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnORRecieptNo = new global::System.Data.DataColumn("ORRecieptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORRecieptNo);
                this.columnAWBPrefix = new global::System.Data.DataColumn("AWBPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBPrefix);
                this.columnAWBNumber = new global::System.Data.DataColumn("AWBNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBNumber);
                this.columnShipperName = new global::System.Data.DataColumn("ShipperName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipperName);
                this.columnCurrencyCode = new global::System.Data.DataColumn("CurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCode);
                this.columnFOP = new global::System.Data.DataColumn("FOP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOP);
                this.columnTINNumber = new global::System.Data.DataColumn("TINNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTINNumber);
                this.columnFreightAndOthers = new global::System.Data.DataColumn("FreightAndOthers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightAndOthers);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnVatableSale = new global::System.Data.DataColumn("VatableSale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVatableSale);
                this.columnVATExempt = new global::System.Data.DataColumn("VATExempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATExempt);
                this.columnVATZeroRated = new global::System.Data.DataColumn("VATZeroRated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATZeroRated);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnCollectedAmount = new global::System.Data.DataColumn("CollectedAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectedAmount);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedOn = new global::System.Data.DataColumn("ModifiedOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedOn);
                this.columnTDS = new global::System.Data.DataColumn("TDS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDS);
                this.columnAWBShipmentType = new global::System.Data.DataColumn("AWBShipmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBShipmentType);
                this.columnAWBStatus = new global::System.Data.DataColumn("AWBStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBStatus);
                this.columnORStatus = new global::System.Data.DataColumn("ORStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORStatus);
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtORTransactionDetailsRow NewdtORTransactionDetailsRow() {
                return ((dtORTransactionDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtORTransactionDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtORTransactionDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtORTransactionDetailsRowChanged != null)) {
                    this.dtORTransactionDetailsRowChanged(this, new dtORTransactionDetailsRowChangeEvent(((dtORTransactionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtORTransactionDetailsRowChanging != null)) {
                    this.dtORTransactionDetailsRowChanging(this, new dtORTransactionDetailsRowChangeEvent(((dtORTransactionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtORTransactionDetailsRowDeleted != null)) {
                    this.dtORTransactionDetailsRowDeleted(this, new dtORTransactionDetailsRowChangeEvent(((dtORTransactionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtORTransactionDetailsRowDeleting != null)) {
                    this.dtORTransactionDetailsRowDeleting(this, new dtORTransactionDetailsRowChangeEvent(((dtORTransactionDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtORTransactionDetailsRow(dtORTransactionDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsORTransaction ds = new dsORTransaction();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtORTransactionDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtORTransactionDetailsRow : global::System.Data.DataRow {
            
            private dtORTransactionDetailsDataTable tabledtORTransactionDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtORTransactionDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtORTransactionDetails = ((dtORTransactionDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuingOffice {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.IssuingOfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuingOffice\' in table \'dtORTransactionDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.IssuingOfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Destination {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.DestinationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Destination\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentDate {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.PaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORRecieptNo {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.ORRecieptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORRecieptNo\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.ORRecieptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBPrefix {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.AWBPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBPrefix\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.AWBPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.AWBNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBNumber\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.AWBNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipperName {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.ShipperNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipperName\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.ShipperNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.CurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyCode\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.CurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FOP {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.FOPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOP\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.FOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TINNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.TINNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TINNumber\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.TINNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightAndOthers {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.FreightAndOthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightAndOthers\' in table \'dtORTransactionDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.FreightAndOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VatableSale {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.VatableSaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VatableSale\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.VatableSaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VATExempt {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.VATExemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATExempt\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.VATExemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VATZeroRated {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.VATZeroRatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATZeroRated\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.VATZeroRatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CollectedAmount {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.CollectedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CollectedAmount\' in table \'dtORTransactionDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.CollectedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedOn {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.CreatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedOn\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.CreatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedOn {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.ModifiedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedOn\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.ModifiedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TDS {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.TDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDS\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.TDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBShipmentType {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.AWBShipmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBShipmentType\' in table \'dtORTransactionDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.AWBShipmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBStatus {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.AWBStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBStatus\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.AWBStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORStatus {
                get {
                    try {
                        return ((string)(this[this.tabledtORTransactionDetails.ORStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORStatus\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.ORStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logo {
                get {
                    try {
                        return ((byte[])(this[this.tabledtORTransactionDetails.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'dtORTransactionDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtORTransactionDetails.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuingOfficeNull() {
                return this.IsNull(this.tabledtORTransactionDetails.IssuingOfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuingOfficeNull() {
                this[this.tabledtORTransactionDetails.IssuingOfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationNull() {
                return this.IsNull(this.tabledtORTransactionDetails.DestinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationNull() {
                this[this.tabledtORTransactionDetails.DestinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentDateNull() {
                return this.IsNull(this.tabledtORTransactionDetails.PaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentDateNull() {
                this[this.tabledtORTransactionDetails.PaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORRecieptNoNull() {
                return this.IsNull(this.tabledtORTransactionDetails.ORRecieptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORRecieptNoNull() {
                this[this.tabledtORTransactionDetails.ORRecieptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBPrefixNull() {
                return this.IsNull(this.tabledtORTransactionDetails.AWBPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBPrefixNull() {
                this[this.tabledtORTransactionDetails.AWBPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBNumberNull() {
                return this.IsNull(this.tabledtORTransactionDetails.AWBNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBNumberNull() {
                this[this.tabledtORTransactionDetails.AWBNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNameNull() {
                return this.IsNull(this.tabledtORTransactionDetails.ShipperNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNameNull() {
                this[this.tabledtORTransactionDetails.ShipperNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyCodeNull() {
                return this.IsNull(this.tabledtORTransactionDetails.CurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyCodeNull() {
                this[this.tabledtORTransactionDetails.CurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFOPNull() {
                return this.IsNull(this.tabledtORTransactionDetails.FOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFOPNull() {
                this[this.tabledtORTransactionDetails.FOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTINNumberNull() {
                return this.IsNull(this.tabledtORTransactionDetails.TINNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTINNumberNull() {
                this[this.tabledtORTransactionDetails.TINNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightAndOthersNull() {
                return this.IsNull(this.tabledtORTransactionDetails.FreightAndOthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightAndOthersNull() {
                this[this.tabledtORTransactionDetails.FreightAndOthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tabledtORTransactionDetails.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tabledtORTransactionDetails.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVatableSaleNull() {
                return this.IsNull(this.tabledtORTransactionDetails.VatableSaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVatableSaleNull() {
                this[this.tabledtORTransactionDetails.VatableSaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATExemptNull() {
                return this.IsNull(this.tabledtORTransactionDetails.VATExemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATExemptNull() {
                this[this.tabledtORTransactionDetails.VATExemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATZeroRatedNull() {
                return this.IsNull(this.tabledtORTransactionDetails.VATZeroRatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATZeroRatedNull() {
                this[this.tabledtORTransactionDetails.VATZeroRatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tabledtORTransactionDetails.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tabledtORTransactionDetails.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCollectedAmountNull() {
                return this.IsNull(this.tabledtORTransactionDetails.CollectedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCollectedAmountNull() {
                this[this.tabledtORTransactionDetails.CollectedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tabledtORTransactionDetails.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tabledtORTransactionDetails.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedOnNull() {
                return this.IsNull(this.tabledtORTransactionDetails.CreatedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedOnNull() {
                this[this.tabledtORTransactionDetails.CreatedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tabledtORTransactionDetails.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tabledtORTransactionDetails.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedOnNull() {
                return this.IsNull(this.tabledtORTransactionDetails.ModifiedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedOnNull() {
                this[this.tabledtORTransactionDetails.ModifiedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSNull() {
                return this.IsNull(this.tabledtORTransactionDetails.TDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSNull() {
                this[this.tabledtORTransactionDetails.TDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBShipmentTypeNull() {
                return this.IsNull(this.tabledtORTransactionDetails.AWBShipmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBShipmentTypeNull() {
                this[this.tabledtORTransactionDetails.AWBShipmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBStatusNull() {
                return this.IsNull(this.tabledtORTransactionDetails.AWBStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBStatusNull() {
                this[this.tabledtORTransactionDetails.AWBStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsORStatusNull() {
                return this.IsNull(this.tabledtORTransactionDetails.ORStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetORStatusNull() {
                this[this.tabledtORTransactionDetails.ORStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tabledtORTransactionDetails.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tabledtORTransactionDetails.LogoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtORTransactionDetailsRowChangeEvent : global::System.EventArgs {
            
            private dtORTransactionDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtORTransactionDetailsRowChangeEvent(dtORTransactionDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtORTransactionDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591