//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ProjectSmartCargoManager.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsrptBillingDCMDetails")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsrptBillingDCMDetails : global::System.Data.DataSet {
        
        private dtrptBillingDCMDetailsDataTable tabledtrptBillingDCMDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsrptBillingDCMDetails() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsrptBillingDCMDetails(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtrptBillingDCMDetails"] != null)) {
                    base.Tables.Add(new dtrptBillingDCMDetailsDataTable(ds.Tables["dtrptBillingDCMDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtrptBillingDCMDetailsDataTable dtrptBillingDCMDetails {
            get {
                return this.tabledtrptBillingDCMDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsrptBillingDCMDetails cln = ((dsrptBillingDCMDetails)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtrptBillingDCMDetails"] != null)) {
                    base.Tables.Add(new dtrptBillingDCMDetailsDataTable(ds.Tables["dtrptBillingDCMDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtrptBillingDCMDetails = ((dtrptBillingDCMDetailsDataTable)(base.Tables["dtrptBillingDCMDetails"]));
            if ((initTable == true)) {
                if ((this.tabledtrptBillingDCMDetails != null)) {
                    this.tabledtrptBillingDCMDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsrptBillingDCMDetails";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsrptBillingDCMDetails.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtrptBillingDCMDetails = new dtrptBillingDCMDetailsDataTable();
            base.Tables.Add(this.tabledtrptBillingDCMDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtrptBillingDCMDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsrptBillingDCMDetails ds = new dsrptBillingDCMDetails();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtrptBillingDCMDetailsRowChangeEventHandler(object sender, dtrptBillingDCMDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtrptBillingDCMDetailsDataTable : global::System.Data.TypedTableBase<dtrptBillingDCMDetailsRow> {
            
            private global::System.Data.DataColumn columnAgentCode;
            
            private global::System.Data.DataColumn columnAWBPrefix;
            
            private global::System.Data.DataColumn columnAWBNumber;
            
            private global::System.Data.DataColumn columnAWBDate;
            
            private global::System.Data.DataColumn columnFltNumber;
            
            private global::System.Data.DataColumn columnFltDate;
            
            private global::System.Data.DataColumn columnOrigin;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnPayMode;
            
            private global::System.Data.DataColumn columnCommodityCode;
            
            private global::System.Data.DataColumn columnCommodityDesc;
            
            private global::System.Data.DataColumn columnGrossWt;
            
            private global::System.Data.DataColumn columnChargableWt;
            
            private global::System.Data.DataColumn columnRatePerKG;
            
            private global::System.Data.DataColumn columnFreightRate;
            
            private global::System.Data.DataColumn columnOCDueCar;
            
            private global::System.Data.DataColumn columnOCDueAgent;
            
            private global::System.Data.DataColumn columnCommissionAmt;
            
            private global::System.Data.DataColumn columnTDSOnCommAmt;
            
            private global::System.Data.DataColumn columnServiceTax;
            
            private global::System.Data.DataColumn columnSTOnComm;
            
            private global::System.Data.DataColumn columnFinalAmt;
            
            private global::System.Data.DataColumn columnConfirmed;
            
            private global::System.Data.DataColumn columnInvoiceNumber;
            
            private global::System.Data.DataColumn columnSpotRateStatus;
            
            private global::System.Data.DataColumn columnDCMNumber;
            
            private global::System.Data.DataColumn columnLogo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptBillingDCMDetailsDataTable() {
                this.TableName = "dtrptBillingDCMDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtrptBillingDCMDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtrptBillingDCMDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentCodeColumn {
                get {
                    return this.columnAgentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBPrefixColumn {
                get {
                    return this.columnAWBPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBNumberColumn {
                get {
                    return this.columnAWBNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBDateColumn {
                get {
                    return this.columnAWBDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FltNumberColumn {
                get {
                    return this.columnFltNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FltDateColumn {
                get {
                    return this.columnFltDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginColumn {
                get {
                    return this.columnOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayModeColumn {
                get {
                    return this.columnPayMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommodityCodeColumn {
                get {
                    return this.columnCommodityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommodityDescColumn {
                get {
                    return this.columnCommodityDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossWtColumn {
                get {
                    return this.columnGrossWt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargableWtColumn {
                get {
                    return this.columnChargableWt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatePerKGColumn {
                get {
                    return this.columnRatePerKG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightRateColumn {
                get {
                    return this.columnFreightRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OCDueCarColumn {
                get {
                    return this.columnOCDueCar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OCDueAgentColumn {
                get {
                    return this.columnOCDueAgent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommissionAmtColumn {
                get {
                    return this.columnCommissionAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSOnCommAmtColumn {
                get {
                    return this.columnTDSOnCommAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceTaxColumn {
                get {
                    return this.columnServiceTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOnCommColumn {
                get {
                    return this.columnSTOnComm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalAmtColumn {
                get {
                    return this.columnFinalAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmedColumn {
                get {
                    return this.columnConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumberColumn {
                get {
                    return this.columnInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpotRateStatusColumn {
                get {
                    return this.columnSpotRateStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCMNumberColumn {
                get {
                    return this.columnDCMNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptBillingDCMDetailsRow this[int index] {
                get {
                    return ((dtrptBillingDCMDetailsRow)(this.Rows[index]));
                }
            }
            
            public event dtrptBillingDCMDetailsRowChangeEventHandler dtrptBillingDCMDetailsRowChanging;
            
            public event dtrptBillingDCMDetailsRowChangeEventHandler dtrptBillingDCMDetailsRowChanged;
            
            public event dtrptBillingDCMDetailsRowChangeEventHandler dtrptBillingDCMDetailsRowDeleting;
            
            public event dtrptBillingDCMDetailsRowChangeEventHandler dtrptBillingDCMDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtrptBillingDCMDetailsRow(dtrptBillingDCMDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptBillingDCMDetailsRow AdddtrptBillingDCMDetailsRow(
                        string AgentCode, 
                        string AWBPrefix, 
                        string AWBNumber, 
                        string AWBDate, 
                        string FltNumber, 
                        string FltDate, 
                        string Origin, 
                        string Destination, 
                        string PayMode, 
                        string CommodityCode, 
                        string CommodityDesc, 
                        string GrossWt, 
                        string ChargableWt, 
                        string RatePerKG, 
                        string FreightRate, 
                        string OCDueCar, 
                        string OCDueAgent, 
                        string CommissionAmt, 
                        string TDSOnCommAmt, 
                        string ServiceTax, 
                        string STOnComm, 
                        string FinalAmt, 
                        string Confirmed, 
                        string InvoiceNumber, 
                        string SpotRateStatus, 
                        string DCMNumber, 
                        byte[] Logo) {
                dtrptBillingDCMDetailsRow rowdtrptBillingDCMDetailsRow = ((dtrptBillingDCMDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AgentCode,
                        AWBPrefix,
                        AWBNumber,
                        AWBDate,
                        FltNumber,
                        FltDate,
                        Origin,
                        Destination,
                        PayMode,
                        CommodityCode,
                        CommodityDesc,
                        GrossWt,
                        ChargableWt,
                        RatePerKG,
                        FreightRate,
                        OCDueCar,
                        OCDueAgent,
                        CommissionAmt,
                        TDSOnCommAmt,
                        ServiceTax,
                        STOnComm,
                        FinalAmt,
                        Confirmed,
                        InvoiceNumber,
                        SpotRateStatus,
                        DCMNumber,
                        Logo};
                rowdtrptBillingDCMDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtrptBillingDCMDetailsRow);
                return rowdtrptBillingDCMDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtrptBillingDCMDetailsDataTable cln = ((dtrptBillingDCMDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtrptBillingDCMDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAgentCode = base.Columns["AgentCode"];
                this.columnAWBPrefix = base.Columns["AWBPrefix"];
                this.columnAWBNumber = base.Columns["AWBNumber"];
                this.columnAWBDate = base.Columns["AWBDate"];
                this.columnFltNumber = base.Columns["FltNumber"];
                this.columnFltDate = base.Columns["FltDate"];
                this.columnOrigin = base.Columns["Origin"];
                this.columnDestination = base.Columns["Destination"];
                this.columnPayMode = base.Columns["PayMode"];
                this.columnCommodityCode = base.Columns["CommodityCode"];
                this.columnCommodityDesc = base.Columns["CommodityDesc"];
                this.columnGrossWt = base.Columns["GrossWt"];
                this.columnChargableWt = base.Columns["ChargableWt"];
                this.columnRatePerKG = base.Columns["RatePerKG"];
                this.columnFreightRate = base.Columns["FreightRate"];
                this.columnOCDueCar = base.Columns["OCDueCar"];
                this.columnOCDueAgent = base.Columns["OCDueAgent"];
                this.columnCommissionAmt = base.Columns["CommissionAmt"];
                this.columnTDSOnCommAmt = base.Columns["TDSOnCommAmt"];
                this.columnServiceTax = base.Columns["ServiceTax"];
                this.columnSTOnComm = base.Columns["STOnComm"];
                this.columnFinalAmt = base.Columns["FinalAmt"];
                this.columnConfirmed = base.Columns["Confirmed"];
                this.columnInvoiceNumber = base.Columns["InvoiceNumber"];
                this.columnSpotRateStatus = base.Columns["SpotRateStatus"];
                this.columnDCMNumber = base.Columns["DCMNumber"];
                this.columnLogo = base.Columns["Logo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAgentCode = new global::System.Data.DataColumn("AgentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentCode);
                this.columnAWBPrefix = new global::System.Data.DataColumn("AWBPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBPrefix);
                this.columnAWBNumber = new global::System.Data.DataColumn("AWBNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBNumber);
                this.columnAWBDate = new global::System.Data.DataColumn("AWBDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBDate);
                this.columnFltNumber = new global::System.Data.DataColumn("FltNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFltNumber);
                this.columnFltDate = new global::System.Data.DataColumn("FltDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFltDate);
                this.columnOrigin = new global::System.Data.DataColumn("Origin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrigin);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnPayMode = new global::System.Data.DataColumn("PayMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMode);
                this.columnCommodityCode = new global::System.Data.DataColumn("CommodityCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityCode);
                this.columnCommodityDesc = new global::System.Data.DataColumn("CommodityDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommodityDesc);
                this.columnGrossWt = new global::System.Data.DataColumn("GrossWt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossWt);
                this.columnChargableWt = new global::System.Data.DataColumn("ChargableWt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChargableWt);
                this.columnRatePerKG = new global::System.Data.DataColumn("RatePerKG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatePerKG);
                this.columnFreightRate = new global::System.Data.DataColumn("FreightRate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightRate);
                this.columnOCDueCar = new global::System.Data.DataColumn("OCDueCar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOCDueCar);
                this.columnOCDueAgent = new global::System.Data.DataColumn("OCDueAgent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOCDueAgent);
                this.columnCommissionAmt = new global::System.Data.DataColumn("CommissionAmt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommissionAmt);
                this.columnTDSOnCommAmt = new global::System.Data.DataColumn("TDSOnCommAmt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSOnCommAmt);
                this.columnServiceTax = new global::System.Data.DataColumn("ServiceTax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTax);
                this.columnSTOnComm = new global::System.Data.DataColumn("STOnComm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOnComm);
                this.columnFinalAmt = new global::System.Data.DataColumn("FinalAmt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalAmt);
                this.columnConfirmed = new global::System.Data.DataColumn("Confirmed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmed);
                this.columnInvoiceNumber = new global::System.Data.DataColumn("InvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNumber);
                this.columnSpotRateStatus = new global::System.Data.DataColumn("SpotRateStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpotRateStatus);
                this.columnDCMNumber = new global::System.Data.DataColumn("DCMNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCMNumber);
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptBillingDCMDetailsRow NewdtrptBillingDCMDetailsRow() {
                return ((dtrptBillingDCMDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtrptBillingDCMDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtrptBillingDCMDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtrptBillingDCMDetailsRowChanged != null)) {
                    this.dtrptBillingDCMDetailsRowChanged(this, new dtrptBillingDCMDetailsRowChangeEvent(((dtrptBillingDCMDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtrptBillingDCMDetailsRowChanging != null)) {
                    this.dtrptBillingDCMDetailsRowChanging(this, new dtrptBillingDCMDetailsRowChangeEvent(((dtrptBillingDCMDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtrptBillingDCMDetailsRowDeleted != null)) {
                    this.dtrptBillingDCMDetailsRowDeleted(this, new dtrptBillingDCMDetailsRowChangeEvent(((dtrptBillingDCMDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtrptBillingDCMDetailsRowDeleting != null)) {
                    this.dtrptBillingDCMDetailsRowDeleting(this, new dtrptBillingDCMDetailsRowChangeEvent(((dtrptBillingDCMDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtrptBillingDCMDetailsRow(dtrptBillingDCMDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsrptBillingDCMDetails ds = new dsrptBillingDCMDetails();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtrptBillingDCMDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtrptBillingDCMDetailsRow : global::System.Data.DataRow {
            
            private dtrptBillingDCMDetailsDataTable tabledtrptBillingDCMDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtrptBillingDCMDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtrptBillingDCMDetails = ((dtrptBillingDCMDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentCode {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.AgentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentCode\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.AgentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBPrefix {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.AWBPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBPrefix\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.AWBPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.AWBNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBNumber\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.AWBNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBDate {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.AWBDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBDate\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.AWBDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FltNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.FltNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FltNumber\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.FltNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FltDate {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.FltDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FltDate\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.FltDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Origin {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.OriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Origin\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.OriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Destination {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.DestinationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Destination\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayMode {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.PayModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayMode\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.PayModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommodityCode {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.CommodityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommodityCode\' in table \'dtrptBillingDCMDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.CommodityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommodityDesc {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.CommodityDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommodityDesc\' in table \'dtrptBillingDCMDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.CommodityDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrossWt {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.GrossWtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossWt\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.GrossWtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChargableWt {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.ChargableWtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChargableWt\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.ChargableWtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RatePerKG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.RatePerKGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatePerKG\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.RatePerKGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FreightRate {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.FreightRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightRate\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.FreightRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OCDueCar {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.OCDueCarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OCDueCar\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.OCDueCarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OCDueAgent {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.OCDueAgentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OCDueAgent\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.OCDueAgentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommissionAmt {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.CommissionAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionAmt\' in table \'dtrptBillingDCMDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.CommissionAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TDSOnCommAmt {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.TDSOnCommAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSOnCommAmt\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.TDSOnCommAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceTax {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.ServiceTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceTax\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.ServiceTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STOnComm {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.STOnCommColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOnComm\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.STOnCommColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FinalAmt {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.FinalAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalAmt\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.FinalAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Confirmed {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.ConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Confirmed\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.ConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.InvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNumber\' in table \'dtrptBillingDCMDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.InvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpotRateStatus {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.SpotRateStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpotRateStatus\' in table \'dtrptBillingDCMDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.SpotRateStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCMNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtrptBillingDCMDetails.DCMNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCMNumber\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.DCMNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logo {
                get {
                    try {
                        return ((byte[])(this[this.tabledtrptBillingDCMDetails.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'dtrptBillingDCMDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptBillingDCMDetails.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentCodeNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.AgentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentCodeNull() {
                this[this.tabledtrptBillingDCMDetails.AgentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBPrefixNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.AWBPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBPrefixNull() {
                this[this.tabledtrptBillingDCMDetails.AWBPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBNumberNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.AWBNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBNumberNull() {
                this[this.tabledtrptBillingDCMDetails.AWBNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBDateNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.AWBDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBDateNull() {
                this[this.tabledtrptBillingDCMDetails.AWBDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFltNumberNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.FltNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFltNumberNull() {
                this[this.tabledtrptBillingDCMDetails.FltNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFltDateNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.FltDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFltDateNull() {
                this[this.tabledtrptBillingDCMDetails.FltDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.OriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginNull() {
                this[this.tabledtrptBillingDCMDetails.OriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.DestinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationNull() {
                this[this.tabledtrptBillingDCMDetails.DestinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayModeNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.PayModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayModeNull() {
                this[this.tabledtrptBillingDCMDetails.PayModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommodityCodeNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.CommodityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommodityCodeNull() {
                this[this.tabledtrptBillingDCMDetails.CommodityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommodityDescNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.CommodityDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommodityDescNull() {
                this[this.tabledtrptBillingDCMDetails.CommodityDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossWtNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.GrossWtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossWtNull() {
                this[this.tabledtrptBillingDCMDetails.GrossWtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargableWtNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.ChargableWtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargableWtNull() {
                this[this.tabledtrptBillingDCMDetails.ChargableWtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatePerKGNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.RatePerKGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatePerKGNull() {
                this[this.tabledtrptBillingDCMDetails.RatePerKGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightRateNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.FreightRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightRateNull() {
                this[this.tabledtrptBillingDCMDetails.FreightRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOCDueCarNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.OCDueCarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOCDueCarNull() {
                this[this.tabledtrptBillingDCMDetails.OCDueCarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOCDueAgentNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.OCDueAgentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOCDueAgentNull() {
                this[this.tabledtrptBillingDCMDetails.OCDueAgentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommissionAmtNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.CommissionAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommissionAmtNull() {
                this[this.tabledtrptBillingDCMDetails.CommissionAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSOnCommAmtNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.TDSOnCommAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSOnCommAmtNull() {
                this[this.tabledtrptBillingDCMDetails.TDSOnCommAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceTaxNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.ServiceTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceTaxNull() {
                this[this.tabledtrptBillingDCMDetails.ServiceTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOnCommNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.STOnCommColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOnCommNull() {
                this[this.tabledtrptBillingDCMDetails.STOnCommColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalAmtNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.FinalAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalAmtNull() {
                this[this.tabledtrptBillingDCMDetails.FinalAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmedNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.ConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmedNull() {
                this[this.tabledtrptBillingDCMDetails.ConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNumberNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.InvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNumberNull() {
                this[this.tabledtrptBillingDCMDetails.InvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpotRateStatusNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.SpotRateStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpotRateStatusNull() {
                this[this.tabledtrptBillingDCMDetails.SpotRateStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCMNumberNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.DCMNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCMNumberNull() {
                this[this.tabledtrptBillingDCMDetails.DCMNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tabledtrptBillingDCMDetails.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tabledtrptBillingDCMDetails.LogoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtrptBillingDCMDetailsRowChangeEvent : global::System.EventArgs {
            
            private dtrptBillingDCMDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptBillingDCMDetailsRowChangeEvent(dtrptBillingDCMDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptBillingDCMDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591