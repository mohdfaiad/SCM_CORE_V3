//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ProjectSmartCargoManager.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsDisposal")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsDisposal : global::System.Data.DataSet {
        
        private dtDisposalDataTable tabledtDisposal;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsDisposal() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsDisposal(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtDisposal"] != null)) {
                    base.Tables.Add(new dtDisposalDataTable(ds.Tables["dtDisposal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDisposalDataTable dtDisposal {
            get {
                return this.tabledtDisposal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsDisposal cln = ((dsDisposal)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtDisposal"] != null)) {
                    base.Tables.Add(new dtDisposalDataTable(ds.Tables["dtDisposal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtDisposal = ((dtDisposalDataTable)(base.Tables["dtDisposal"]));
            if ((initTable == true)) {
                if ((this.tabledtDisposal != null)) {
                    this.tabledtDisposal.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsDisposal";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsDisposal.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtDisposal = new dtDisposalDataTable();
            base.Tables.Add(this.tabledtDisposal);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtDisposal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsDisposal ds = new dsDisposal();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtDisposalRowChangeEventHandler(object sender, dtDisposalRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDisposalDataTable : global::System.Data.TypedTableBase<dtDisposalRow> {
            
            private global::System.Data.DataColumn columnAWBPrefix;
            
            private global::System.Data.DataColumn columnAWBNumber;
            
            private global::System.Data.DataColumn columnOriginDate;
            
            private global::System.Data.DataColumn columnOrigin;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnBookedFlt;
            
            private global::System.Data.DataColumn columnBookedFltDate;
            
            private global::System.Data.DataColumn columnTotalPieces;
            
            private global::System.Data.DataColumn columnTotalWeight;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnShipper;
            
            private global::System.Data.DataColumn columnConsignee;
            
            private global::System.Data.DataColumn columnPiecesOnhand;
            
            private global::System.Data.DataColumn columnDatePieceswereOnhand;
            
            private global::System.Data.DataColumn columnDaysOnHand;
            
            private global::System.Data.DataColumn columnSHCCode;
            
            private global::System.Data.DataColumn columnLogo;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDisposalDataTable() {
                this.TableName = "dtDisposal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDisposalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtDisposalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBPrefixColumn {
                get {
                    return this.columnAWBPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBNumberColumn {
                get {
                    return this.columnAWBNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginDateColumn {
                get {
                    return this.columnOriginDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OriginColumn {
                get {
                    return this.columnOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookedFltColumn {
                get {
                    return this.columnBookedFlt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookedFltDateColumn {
                get {
                    return this.columnBookedFltDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPiecesColumn {
                get {
                    return this.columnTotalPieces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalWeightColumn {
                get {
                    return this.columnTotalWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperColumn {
                get {
                    return this.columnShipper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsigneeColumn {
                get {
                    return this.columnConsignee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiecesOnhandColumn {
                get {
                    return this.columnPiecesOnhand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatePieceswereOnhandColumn {
                get {
                    return this.columnDatePieceswereOnhand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysOnHandColumn {
                get {
                    return this.columnDaysOnHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHCCodeColumn {
                get {
                    return this.columnSHCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDisposalRow this[int index] {
                get {
                    return ((dtDisposalRow)(this.Rows[index]));
                }
            }
            
            public event dtDisposalRowChangeEventHandler dtDisposalRowChanging;
            
            public event dtDisposalRowChangeEventHandler dtDisposalRowChanged;
            
            public event dtDisposalRowChangeEventHandler dtDisposalRowDeleting;
            
            public event dtDisposalRowChangeEventHandler dtDisposalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtDisposalRow(dtDisposalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDisposalRow AdddtDisposalRow(
                        string AWBPrefix, 
                        string AWBNumber, 
                        string OriginDate, 
                        string Origin, 
                        string Destination, 
                        string BookedFlt, 
                        string BookedFltDate, 
                        string TotalPieces, 
                        string TotalWeight, 
                        string Description, 
                        string Shipper, 
                        string Consignee, 
                        string PiecesOnhand, 
                        string DatePieceswereOnhand, 
                        string DaysOnHand, 
                        string SHCCode, 
                        byte[] Logo, 
                        string FromDate, 
                        string ToDate, 
                        string Location) {
                dtDisposalRow rowdtDisposalRow = ((dtDisposalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AWBPrefix,
                        AWBNumber,
                        OriginDate,
                        Origin,
                        Destination,
                        BookedFlt,
                        BookedFltDate,
                        TotalPieces,
                        TotalWeight,
                        Description,
                        Shipper,
                        Consignee,
                        PiecesOnhand,
                        DatePieceswereOnhand,
                        DaysOnHand,
                        SHCCode,
                        Logo,
                        FromDate,
                        ToDate,
                        Location};
                rowdtDisposalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtDisposalRow);
                return rowdtDisposalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtDisposalDataTable cln = ((dtDisposalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDisposalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAWBPrefix = base.Columns["AWBPrefix"];
                this.columnAWBNumber = base.Columns["AWBNumber"];
                this.columnOriginDate = base.Columns["OriginDate"];
                this.columnOrigin = base.Columns["Origin"];
                this.columnDestination = base.Columns["Destination"];
                this.columnBookedFlt = base.Columns["BookedFlt"];
                this.columnBookedFltDate = base.Columns["BookedFltDate"];
                this.columnTotalPieces = base.Columns["TotalPieces"];
                this.columnTotalWeight = base.Columns["TotalWeight"];
                this.columnDescription = base.Columns["Description"];
                this.columnShipper = base.Columns["Shipper"];
                this.columnConsignee = base.Columns["Consignee"];
                this.columnPiecesOnhand = base.Columns["PiecesOnhand"];
                this.columnDatePieceswereOnhand = base.Columns["DatePieceswereOnhand"];
                this.columnDaysOnHand = base.Columns["DaysOnHand"];
                this.columnSHCCode = base.Columns["SHCCode"];
                this.columnLogo = base.Columns["Logo"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnLocation = base.Columns["Location"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAWBPrefix = new global::System.Data.DataColumn("AWBPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBPrefix);
                this.columnAWBNumber = new global::System.Data.DataColumn("AWBNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBNumber);
                this.columnOriginDate = new global::System.Data.DataColumn("OriginDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginDate);
                this.columnOrigin = new global::System.Data.DataColumn("Origin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrigin);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnBookedFlt = new global::System.Data.DataColumn("BookedFlt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookedFlt);
                this.columnBookedFltDate = new global::System.Data.DataColumn("BookedFltDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookedFltDate);
                this.columnTotalPieces = new global::System.Data.DataColumn("TotalPieces", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPieces);
                this.columnTotalWeight = new global::System.Data.DataColumn("TotalWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWeight);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnShipper = new global::System.Data.DataColumn("Shipper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipper);
                this.columnConsignee = new global::System.Data.DataColumn("Consignee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsignee);
                this.columnPiecesOnhand = new global::System.Data.DataColumn("PiecesOnhand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiecesOnhand);
                this.columnDatePieceswereOnhand = new global::System.Data.DataColumn("DatePieceswereOnhand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatePieceswereOnhand);
                this.columnDaysOnHand = new global::System.Data.DataColumn("DaysOnHand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysOnHand);
                this.columnSHCCode = new global::System.Data.DataColumn("SHCCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHCCode);
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDisposalRow NewdtDisposalRow() {
                return ((dtDisposalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtDisposalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtDisposalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtDisposalRowChanged != null)) {
                    this.dtDisposalRowChanged(this, new dtDisposalRowChangeEvent(((dtDisposalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtDisposalRowChanging != null)) {
                    this.dtDisposalRowChanging(this, new dtDisposalRowChangeEvent(((dtDisposalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtDisposalRowDeleted != null)) {
                    this.dtDisposalRowDeleted(this, new dtDisposalRowChangeEvent(((dtDisposalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtDisposalRowDeleting != null)) {
                    this.dtDisposalRowDeleting(this, new dtDisposalRowChangeEvent(((dtDisposalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtDisposalRow(dtDisposalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsDisposal ds = new dsDisposal();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDisposalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtDisposalRow : global::System.Data.DataRow {
            
            private dtDisposalDataTable tabledtDisposal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDisposalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtDisposal = ((dtDisposalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBPrefix {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.AWBPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBPrefix\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.AWBPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.AWBNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBNumber\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.AWBNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OriginDate {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.OriginDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OriginDate\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.OriginDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Origin {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.OriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Origin\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.OriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Destination {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.DestinationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Destination\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookedFlt {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.BookedFltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookedFlt\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.BookedFltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookedFltDate {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.BookedFltDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookedFltDate\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.BookedFltDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPieces {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.TotalPiecesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPieces\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.TotalPiecesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalWeight {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.TotalWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalWeight\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.TotalWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shipper {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.ShipperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipper\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.ShipperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Consignee {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.ConsigneeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consignee\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.ConsigneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PiecesOnhand {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.PiecesOnhandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PiecesOnhand\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.PiecesOnhandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DatePieceswereOnhand {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.DatePieceswereOnhandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DatePieceswereOnhand\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.DatePieceswereOnhandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DaysOnHand {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.DaysOnHandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysOnHand\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.DaysOnHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHCCode {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.SHCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHCCode\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.SHCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logo {
                get {
                    try {
                        return ((byte[])(this[this.tabledtDisposal.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FromDate {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDate {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tabledtDisposal.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'dtDisposal\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtDisposal.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBPrefixNull() {
                return this.IsNull(this.tabledtDisposal.AWBPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBPrefixNull() {
                this[this.tabledtDisposal.AWBPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBNumberNull() {
                return this.IsNull(this.tabledtDisposal.AWBNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBNumberNull() {
                this[this.tabledtDisposal.AWBNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginDateNull() {
                return this.IsNull(this.tabledtDisposal.OriginDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginDateNull() {
                this[this.tabledtDisposal.OriginDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOriginNull() {
                return this.IsNull(this.tabledtDisposal.OriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOriginNull() {
                this[this.tabledtDisposal.OriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationNull() {
                return this.IsNull(this.tabledtDisposal.DestinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationNull() {
                this[this.tabledtDisposal.DestinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookedFltNull() {
                return this.IsNull(this.tabledtDisposal.BookedFltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookedFltNull() {
                this[this.tabledtDisposal.BookedFltColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookedFltDateNull() {
                return this.IsNull(this.tabledtDisposal.BookedFltDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookedFltDateNull() {
                this[this.tabledtDisposal.BookedFltDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPiecesNull() {
                return this.IsNull(this.tabledtDisposal.TotalPiecesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPiecesNull() {
                this[this.tabledtDisposal.TotalPiecesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalWeightNull() {
                return this.IsNull(this.tabledtDisposal.TotalWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalWeightNull() {
                this[this.tabledtDisposal.TotalWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tabledtDisposal.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tabledtDisposal.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNull() {
                return this.IsNull(this.tabledtDisposal.ShipperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNull() {
                this[this.tabledtDisposal.ShipperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsigneeNull() {
                return this.IsNull(this.tabledtDisposal.ConsigneeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsigneeNull() {
                this[this.tabledtDisposal.ConsigneeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiecesOnhandNull() {
                return this.IsNull(this.tabledtDisposal.PiecesOnhandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiecesOnhandNull() {
                this[this.tabledtDisposal.PiecesOnhandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatePieceswereOnhandNull() {
                return this.IsNull(this.tabledtDisposal.DatePieceswereOnhandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatePieceswereOnhandNull() {
                this[this.tabledtDisposal.DatePieceswereOnhandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysOnHandNull() {
                return this.IsNull(this.tabledtDisposal.DaysOnHandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysOnHandNull() {
                this[this.tabledtDisposal.DaysOnHandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHCCodeNull() {
                return this.IsNull(this.tabledtDisposal.SHCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHCCodeNull() {
                this[this.tabledtDisposal.SHCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tabledtDisposal.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tabledtDisposal.LogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tabledtDisposal.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tabledtDisposal.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tabledtDisposal.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tabledtDisposal.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tabledtDisposal.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tabledtDisposal.LocationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtDisposalRowChangeEvent : global::System.EventArgs {
            
            private dtDisposalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDisposalRowChangeEvent(dtDisposalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDisposalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591