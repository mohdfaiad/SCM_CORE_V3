//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ProjectSmartCargoManager.App_Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsrptDSR")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsrptDSR : global::System.Data.DataSet {
        
        private dtrptDSRDataTable tabledtrptDSR;
        
        private dtrptDSR1DataTable tabledtrptDSR1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsrptDSR() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsrptDSR(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtrptDSR"] != null)) {
                    base.Tables.Add(new dtrptDSRDataTable(ds.Tables["dtrptDSR"]));
                }
                if ((ds.Tables["dtrptDSR1"] != null)) {
                    base.Tables.Add(new dtrptDSR1DataTable(ds.Tables["dtrptDSR1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtrptDSRDataTable dtrptDSR {
            get {
                return this.tabledtrptDSR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtrptDSR1DataTable dtrptDSR1 {
            get {
                return this.tabledtrptDSR1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsrptDSR cln = ((dsrptDSR)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtrptDSR"] != null)) {
                    base.Tables.Add(new dtrptDSRDataTable(ds.Tables["dtrptDSR"]));
                }
                if ((ds.Tables["dtrptDSR1"] != null)) {
                    base.Tables.Add(new dtrptDSR1DataTable(ds.Tables["dtrptDSR1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtrptDSR = ((dtrptDSRDataTable)(base.Tables["dtrptDSR"]));
            if ((initTable == true)) {
                if ((this.tabledtrptDSR != null)) {
                    this.tabledtrptDSR.InitVars();
                }
            }
            this.tabledtrptDSR1 = ((dtrptDSR1DataTable)(base.Tables["dtrptDSR1"]));
            if ((initTable == true)) {
                if ((this.tabledtrptDSR1 != null)) {
                    this.tabledtrptDSR1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsrptDSR";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsrptDSR.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtrptDSR = new dtrptDSRDataTable();
            base.Tables.Add(this.tabledtrptDSR);
            this.tabledtrptDSR1 = new dtrptDSR1DataTable();
            base.Tables.Add(this.tabledtrptDSR1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtrptDSR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtrptDSR1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsrptDSR ds = new dsrptDSR();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtrptDSRRowChangeEventHandler(object sender, dtrptDSRRowChangeEvent e);
        
        public delegate void dtrptDSR1RowChangeEventHandler(object sender, dtrptDSR1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtrptDSRDataTable : global::System.Data.TypedTableBase<dtrptDSRRow> {
            
            private global::System.Data.DataColumn columnSystem_On;
            
            private global::System.Data.DataColumn columnSystem_Off;
            
            private global::System.Data.DataColumn columnAirline;
            
            private global::System.Data.DataColumn columnAWBNumber;
            
            private global::System.Data.DataColumn columnAWBDate;
            
            private global::System.Data.DataColumn columnShipper;
            
            private global::System.Data.DataColumn columnCWT;
            
            private global::System.Data.DataColumn columnWT_CHG;
            
            private global::System.Data.DataColumn columnVAL_CHG;
            
            private global::System.Data.DataColumn _columnDue_A_L;
            
            private global::System.Data.DataColumn columnINS;
            
            private global::System.Data.DataColumn columnFSC;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnEVAT;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnNet_CHG;
            
            private global::System.Data.DataColumn columnPP;
            
            private global::System.Data.DataColumn columnCC;
            
            private global::System.Data.DataColumn columnPX;
            
            private global::System.Data.DataColumn columnEnt_By;
            
            private global::System.Data.DataColumn columnEnt_Date;
            
            private global::System.Data.DataColumn columnEnt_Time;
            
            private global::System.Data.DataColumn columnLogo;
            
            private global::System.Data.DataColumn columnClientName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSRDataTable() {
                this.TableName = "dtrptDSR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtrptDSRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtrptDSRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn System_OnColumn {
                get {
                    return this.columnSystem_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn System_OffColumn {
                get {
                    return this.columnSystem_Off;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AirlineColumn {
                get {
                    return this.columnAirline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBNumberColumn {
                get {
                    return this.columnAWBNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBDateColumn {
                get {
                    return this.columnAWBDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperColumn {
                get {
                    return this.columnShipper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CWTColumn {
                get {
                    return this.columnCWT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WT_CHGColumn {
                get {
                    return this.columnWT_CHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VAL_CHGColumn {
                get {
                    return this.columnVAL_CHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _Due_A_LColumn {
                get {
                    return this._columnDue_A_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSColumn {
                get {
                    return this.columnINS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSCColumn {
                get {
                    return this.columnFSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVATColumn {
                get {
                    return this.columnEVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Net_CHGColumn {
                get {
                    return this.columnNet_CHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPColumn {
                get {
                    return this.columnPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCColumn {
                get {
                    return this.columnCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXColumn {
                get {
                    return this.columnPX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ent_ByColumn {
                get {
                    return this.columnEnt_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ent_DateColumn {
                get {
                    return this.columnEnt_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ent_TimeColumn {
                get {
                    return this.columnEnt_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSRRow this[int index] {
                get {
                    return ((dtrptDSRRow)(this.Rows[index]));
                }
            }
            
            public event dtrptDSRRowChangeEventHandler dtrptDSRRowChanging;
            
            public event dtrptDSRRowChangeEventHandler dtrptDSRRowChanged;
            
            public event dtrptDSRRowChangeEventHandler dtrptDSRRowDeleting;
            
            public event dtrptDSRRowChangeEventHandler dtrptDSRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtrptDSRRow(dtrptDSRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSRRow AdddtrptDSRRow(
                        string System_On, 
                        string System_Off, 
                        string Airline, 
                        string AWBNumber, 
                        string AWBDate, 
                        string Shipper, 
                        string CWT, 
                        string WT_CHG, 
                        string VAL_CHG, 
                        string _Due_A_L, 
                        string INS, 
                        string FSC, 
                        string SubTotal, 
                        string EVAT, 
                        string Total, 
                        string Net_CHG, 
                        string PP, 
                        string CC, 
                        string PX, 
                        string Ent_By, 
                        string Ent_Date, 
                        string Ent_Time, 
                        byte[] Logo, 
                        string ClientName) {
                dtrptDSRRow rowdtrptDSRRow = ((dtrptDSRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        System_On,
                        System_Off,
                        Airline,
                        AWBNumber,
                        AWBDate,
                        Shipper,
                        CWT,
                        WT_CHG,
                        VAL_CHG,
                        _Due_A_L,
                        INS,
                        FSC,
                        SubTotal,
                        EVAT,
                        Total,
                        Net_CHG,
                        PP,
                        CC,
                        PX,
                        Ent_By,
                        Ent_Date,
                        Ent_Time,
                        Logo,
                        ClientName};
                rowdtrptDSRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtrptDSRRow);
                return rowdtrptDSRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtrptDSRDataTable cln = ((dtrptDSRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtrptDSRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSystem_On = base.Columns["System On"];
                this.columnSystem_Off = base.Columns["System Off"];
                this.columnAirline = base.Columns["Airline"];
                this.columnAWBNumber = base.Columns["AWBNumber"];
                this.columnAWBDate = base.Columns["AWBDate"];
                this.columnShipper = base.Columns["Shipper"];
                this.columnCWT = base.Columns["CWT"];
                this.columnWT_CHG = base.Columns["WT CHG"];
                this.columnVAL_CHG = base.Columns["VAL CHG"];
                this._columnDue_A_L = base.Columns["Due A/L"];
                this.columnINS = base.Columns["INS"];
                this.columnFSC = base.Columns["FSC"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnEVAT = base.Columns["EVAT"];
                this.columnTotal = base.Columns["Total"];
                this.columnNet_CHG = base.Columns["Net CHG"];
                this.columnPP = base.Columns["PP"];
                this.columnCC = base.Columns["CC"];
                this.columnPX = base.Columns["PX"];
                this.columnEnt_By = base.Columns["Ent By"];
                this.columnEnt_Date = base.Columns["Ent Date"];
                this.columnEnt_Time = base.Columns["Ent Time"];
                this.columnLogo = base.Columns["Logo"];
                this.columnClientName = base.Columns["ClientName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSystem_On = new global::System.Data.DataColumn("System On", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem_On);
                this.columnSystem_Off = new global::System.Data.DataColumn("System Off", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem_Off);
                this.columnAirline = new global::System.Data.DataColumn("Airline", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirline);
                this.columnAWBNumber = new global::System.Data.DataColumn("AWBNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBNumber);
                this.columnAWBDate = new global::System.Data.DataColumn("AWBDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBDate);
                this.columnShipper = new global::System.Data.DataColumn("Shipper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipper);
                this.columnCWT = new global::System.Data.DataColumn("CWT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWT);
                this.columnWT_CHG = new global::System.Data.DataColumn("WT CHG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWT_CHG);
                this.columnVAL_CHG = new global::System.Data.DataColumn("VAL CHG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAL_CHG);
                this._columnDue_A_L = new global::System.Data.DataColumn("Due A/L", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnDue_A_L.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnDue_A_L");
                this._columnDue_A_L.ExtendedProperties.Add("Generator_UserColumnName", "Due A/L");
                base.Columns.Add(this._columnDue_A_L);
                this.columnINS = new global::System.Data.DataColumn("INS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS);
                this.columnFSC = new global::System.Data.DataColumn("FSC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSC);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnEVAT = new global::System.Data.DataColumn("EVAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVAT);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnNet_CHG = new global::System.Data.DataColumn("Net CHG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNet_CHG);
                this.columnPP = new global::System.Data.DataColumn("PP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPP);
                this.columnCC = new global::System.Data.DataColumn("CC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC);
                this.columnPX = new global::System.Data.DataColumn("PX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPX);
                this.columnEnt_By = new global::System.Data.DataColumn("Ent By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnt_By);
                this.columnEnt_Date = new global::System.Data.DataColumn("Ent Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnt_Date);
                this.columnEnt_Time = new global::System.Data.DataColumn("Ent Time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnt_Time);
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSRRow NewdtrptDSRRow() {
                return ((dtrptDSRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtrptDSRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtrptDSRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtrptDSRRowChanged != null)) {
                    this.dtrptDSRRowChanged(this, new dtrptDSRRowChangeEvent(((dtrptDSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtrptDSRRowChanging != null)) {
                    this.dtrptDSRRowChanging(this, new dtrptDSRRowChangeEvent(((dtrptDSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtrptDSRRowDeleted != null)) {
                    this.dtrptDSRRowDeleted(this, new dtrptDSRRowChangeEvent(((dtrptDSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtrptDSRRowDeleting != null)) {
                    this.dtrptDSRRowDeleting(this, new dtrptDSRRowChangeEvent(((dtrptDSRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtrptDSRRow(dtrptDSRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsrptDSR ds = new dsrptDSR();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtrptDSRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtrptDSR1DataTable : global::System.Data.TypedTableBase<dtrptDSR1Row> {
            
            private global::System.Data.DataColumn columnSystemOn;
            
            private global::System.Data.DataColumn columnSystemOff;
            
            private global::System.Data.DataColumn columnAirline;
            
            private global::System.Data.DataColumn columnAWBNumber;
            
            private global::System.Data.DataColumn columnAWBDate;
            
            private global::System.Data.DataColumn columnShipper;
            
            private global::System.Data.DataColumn columnCWT;
            
            private global::System.Data.DataColumn columnWTCHG;
            
            private global::System.Data.DataColumn columnVALCHG;
            
            private global::System.Data.DataColumn columnDueAL;
            
            private global::System.Data.DataColumn columnINS;
            
            private global::System.Data.DataColumn columnFSC;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnEVAT;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnNetCHG;
            
            private global::System.Data.DataColumn columnPP;
            
            private global::System.Data.DataColumn columnCC;
            
            private global::System.Data.DataColumn columnPX;
            
            private global::System.Data.DataColumn columnEntBy;
            
            private global::System.Data.DataColumn columnEntDate;
            
            private global::System.Data.DataColumn columnEntTime;
            
            private global::System.Data.DataColumn columnLogo;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnAgentCode;
            
            private global::System.Data.DataColumn columnAgentName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSR1DataTable() {
                this.TableName = "dtrptDSR1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtrptDSR1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtrptDSR1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemOnColumn {
                get {
                    return this.columnSystemOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SystemOffColumn {
                get {
                    return this.columnSystemOff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AirlineColumn {
                get {
                    return this.columnAirline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBNumberColumn {
                get {
                    return this.columnAWBNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AWBDateColumn {
                get {
                    return this.columnAWBDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipperColumn {
                get {
                    return this.columnShipper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CWTColumn {
                get {
                    return this.columnCWT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WTCHGColumn {
                get {
                    return this.columnWTCHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALCHGColumn {
                get {
                    return this.columnVALCHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueALColumn {
                get {
                    return this.columnDueAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSColumn {
                get {
                    return this.columnINS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSCColumn {
                get {
                    return this.columnFSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EVATColumn {
                get {
                    return this.columnEVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetCHGColumn {
                get {
                    return this.columnNetCHG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPColumn {
                get {
                    return this.columnPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCColumn {
                get {
                    return this.columnCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PXColumn {
                get {
                    return this.columnPX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntByColumn {
                get {
                    return this.columnEntBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntDateColumn {
                get {
                    return this.columnEntDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntTimeColumn {
                get {
                    return this.columnEntTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentCodeColumn {
                get {
                    return this.columnAgentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNameColumn {
                get {
                    return this.columnAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSR1Row this[int index] {
                get {
                    return ((dtrptDSR1Row)(this.Rows[index]));
                }
            }
            
            public event dtrptDSR1RowChangeEventHandler dtrptDSR1RowChanging;
            
            public event dtrptDSR1RowChangeEventHandler dtrptDSR1RowChanged;
            
            public event dtrptDSR1RowChangeEventHandler dtrptDSR1RowDeleting;
            
            public event dtrptDSR1RowChangeEventHandler dtrptDSR1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtrptDSR1Row(dtrptDSR1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSR1Row AdddtrptDSR1Row(
                        string SystemOn, 
                        string SystemOff, 
                        string Airline, 
                        string AWBNumber, 
                        string AWBDate, 
                        string Shipper, 
                        string CWT, 
                        string WTCHG, 
                        string VALCHG, 
                        string DueAL, 
                        string INS, 
                        string FSC, 
                        string SubTotal, 
                        string EVAT, 
                        string Total, 
                        string NetCHG, 
                        string PP, 
                        string CC, 
                        string PX, 
                        string EntBy, 
                        string EntDate, 
                        string EntTime, 
                        string Logo, 
                        string ClientName, 
                        string AgentCode, 
                        string AgentName) {
                dtrptDSR1Row rowdtrptDSR1Row = ((dtrptDSR1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SystemOn,
                        SystemOff,
                        Airline,
                        AWBNumber,
                        AWBDate,
                        Shipper,
                        CWT,
                        WTCHG,
                        VALCHG,
                        DueAL,
                        INS,
                        FSC,
                        SubTotal,
                        EVAT,
                        Total,
                        NetCHG,
                        PP,
                        CC,
                        PX,
                        EntBy,
                        EntDate,
                        EntTime,
                        Logo,
                        ClientName,
                        AgentCode,
                        AgentName};
                rowdtrptDSR1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtrptDSR1Row);
                return rowdtrptDSR1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtrptDSR1DataTable cln = ((dtrptDSR1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtrptDSR1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSystemOn = base.Columns["SystemOn"];
                this.columnSystemOff = base.Columns["SystemOff"];
                this.columnAirline = base.Columns["Airline"];
                this.columnAWBNumber = base.Columns["AWBNumber"];
                this.columnAWBDate = base.Columns["AWBDate"];
                this.columnShipper = base.Columns["Shipper"];
                this.columnCWT = base.Columns["CWT"];
                this.columnWTCHG = base.Columns["WTCHG"];
                this.columnVALCHG = base.Columns["VALCHG"];
                this.columnDueAL = base.Columns["DueAL"];
                this.columnINS = base.Columns["INS"];
                this.columnFSC = base.Columns["FSC"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnEVAT = base.Columns["EVAT"];
                this.columnTotal = base.Columns["Total"];
                this.columnNetCHG = base.Columns["NetCHG"];
                this.columnPP = base.Columns["PP"];
                this.columnCC = base.Columns["CC"];
                this.columnPX = base.Columns["PX"];
                this.columnEntBy = base.Columns["EntBy"];
                this.columnEntDate = base.Columns["EntDate"];
                this.columnEntTime = base.Columns["EntTime"];
                this.columnLogo = base.Columns["Logo"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnAgentCode = base.Columns["AgentCode"];
                this.columnAgentName = base.Columns["AgentName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSystemOn = new global::System.Data.DataColumn("SystemOn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemOn);
                this.columnSystemOff = new global::System.Data.DataColumn("SystemOff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemOff);
                this.columnAirline = new global::System.Data.DataColumn("Airline", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirline);
                this.columnAWBNumber = new global::System.Data.DataColumn("AWBNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBNumber);
                this.columnAWBDate = new global::System.Data.DataColumn("AWBDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAWBDate);
                this.columnShipper = new global::System.Data.DataColumn("Shipper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipper);
                this.columnCWT = new global::System.Data.DataColumn("CWT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWT);
                this.columnWTCHG = new global::System.Data.DataColumn("WTCHG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWTCHG);
                this.columnVALCHG = new global::System.Data.DataColumn("VALCHG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALCHG);
                this.columnDueAL = new global::System.Data.DataColumn("DueAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueAL);
                this.columnINS = new global::System.Data.DataColumn("INS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS);
                this.columnFSC = new global::System.Data.DataColumn("FSC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSC);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnEVAT = new global::System.Data.DataColumn("EVAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEVAT);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnNetCHG = new global::System.Data.DataColumn("NetCHG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetCHG);
                this.columnPP = new global::System.Data.DataColumn("PP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPP);
                this.columnCC = new global::System.Data.DataColumn("CC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC);
                this.columnPX = new global::System.Data.DataColumn("PX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPX);
                this.columnEntBy = new global::System.Data.DataColumn("EntBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntBy);
                this.columnEntDate = new global::System.Data.DataColumn("EntDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntDate);
                this.columnEntTime = new global::System.Data.DataColumn("EntTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntTime);
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnAgentCode = new global::System.Data.DataColumn("AgentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentCode);
                this.columnAgentName = new global::System.Data.DataColumn("AgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSR1Row NewdtrptDSR1Row() {
                return ((dtrptDSR1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtrptDSR1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtrptDSR1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtrptDSR1RowChanged != null)) {
                    this.dtrptDSR1RowChanged(this, new dtrptDSR1RowChangeEvent(((dtrptDSR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtrptDSR1RowChanging != null)) {
                    this.dtrptDSR1RowChanging(this, new dtrptDSR1RowChangeEvent(((dtrptDSR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtrptDSR1RowDeleted != null)) {
                    this.dtrptDSR1RowDeleted(this, new dtrptDSR1RowChangeEvent(((dtrptDSR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtrptDSR1RowDeleting != null)) {
                    this.dtrptDSR1RowDeleting(this, new dtrptDSR1RowChangeEvent(((dtrptDSR1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtrptDSR1Row(dtrptDSR1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsrptDSR ds = new dsrptDSR();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtrptDSR1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtrptDSRRow : global::System.Data.DataRow {
            
            private dtrptDSRDataTable tabledtrptDSR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtrptDSRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtrptDSR = ((dtrptDSRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string System_On {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.System_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'System On\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.System_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string System_Off {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.System_OffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'System Off\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.System_OffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Airline {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.AirlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Airline\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.AirlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.AWBNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBNumber\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.AWBNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBDate {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.AWBDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBDate\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.AWBDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shipper {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.ShipperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipper\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.ShipperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CWT {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.CWTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CWT\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.CWTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WT_CHG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.WT_CHGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WT CHG\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.WT_CHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAL_CHG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.VAL_CHGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAL CHG\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.VAL_CHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Due_A_L {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR._Due_A_LColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Due A/L\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR._Due_A_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.INSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.INSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSC {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.FSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSC\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.FSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubTotal {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVAT {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.EVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EVAT\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.EVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Net_CHG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.Net_CHGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Net CHG\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.Net_CHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PP {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.PPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PP\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.PPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CC {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.CCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CC\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.CCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PX {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.PXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PX\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.PXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ent_By {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.Ent_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ent By\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.Ent_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ent_Date {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.Ent_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ent Date\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.Ent_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ent_Time {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.Ent_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ent Time\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.Ent_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logo {
                get {
                    try {
                        return ((byte[])(this[this.tabledtrptDSR.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'dtrptDSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystem_OnNull() {
                return this.IsNull(this.tabledtrptDSR.System_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystem_OnNull() {
                this[this.tabledtrptDSR.System_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystem_OffNull() {
                return this.IsNull(this.tabledtrptDSR.System_OffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystem_OffNull() {
                this[this.tabledtrptDSR.System_OffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAirlineNull() {
                return this.IsNull(this.tabledtrptDSR.AirlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAirlineNull() {
                this[this.tabledtrptDSR.AirlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBNumberNull() {
                return this.IsNull(this.tabledtrptDSR.AWBNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBNumberNull() {
                this[this.tabledtrptDSR.AWBNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBDateNull() {
                return this.IsNull(this.tabledtrptDSR.AWBDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBDateNull() {
                this[this.tabledtrptDSR.AWBDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNull() {
                return this.IsNull(this.tabledtrptDSR.ShipperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNull() {
                this[this.tabledtrptDSR.ShipperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCWTNull() {
                return this.IsNull(this.tabledtrptDSR.CWTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCWTNull() {
                this[this.tabledtrptDSR.CWTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWT_CHGNull() {
                return this.IsNull(this.tabledtrptDSR.WT_CHGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWT_CHGNull() {
                this[this.tabledtrptDSR.WT_CHGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVAL_CHGNull() {
                return this.IsNull(this.tabledtrptDSR.VAL_CHGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVAL_CHGNull() {
                this[this.tabledtrptDSR.VAL_CHGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Due_A_LNull() {
                return this.IsNull(this.tabledtrptDSR._Due_A_LColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Due_A_LNull() {
                this[this.tabledtrptDSR._Due_A_LColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSNull() {
                return this.IsNull(this.tabledtrptDSR.INSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSNull() {
                this[this.tabledtrptDSR.INSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSCNull() {
                return this.IsNull(this.tabledtrptDSR.FSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSCNull() {
                this[this.tabledtrptDSR.FSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tabledtrptDSR.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tabledtrptDSR.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVATNull() {
                return this.IsNull(this.tabledtrptDSR.EVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVATNull() {
                this[this.tabledtrptDSR.EVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tabledtrptDSR.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tabledtrptDSR.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNet_CHGNull() {
                return this.IsNull(this.tabledtrptDSR.Net_CHGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNet_CHGNull() {
                this[this.tabledtrptDSR.Net_CHGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPNull() {
                return this.IsNull(this.tabledtrptDSR.PPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPNull() {
                this[this.tabledtrptDSR.PPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCNull() {
                return this.IsNull(this.tabledtrptDSR.CCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCNull() {
                this[this.tabledtrptDSR.CCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPXNull() {
                return this.IsNull(this.tabledtrptDSR.PXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPXNull() {
                this[this.tabledtrptDSR.PXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnt_ByNull() {
                return this.IsNull(this.tabledtrptDSR.Ent_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnt_ByNull() {
                this[this.tabledtrptDSR.Ent_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnt_DateNull() {
                return this.IsNull(this.tabledtrptDSR.Ent_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnt_DateNull() {
                this[this.tabledtrptDSR.Ent_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnt_TimeNull() {
                return this.IsNull(this.tabledtrptDSR.Ent_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnt_TimeNull() {
                this[this.tabledtrptDSR.Ent_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tabledtrptDSR.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tabledtrptDSR.LogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tabledtrptDSR.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tabledtrptDSR.ClientNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtrptDSR1Row : global::System.Data.DataRow {
            
            private dtrptDSR1DataTable tabledtrptDSR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtrptDSR1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtrptDSR1 = ((dtrptDSR1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SystemOn {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.SystemOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemOn\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.SystemOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SystemOff {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.SystemOffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemOff\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.SystemOffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Airline {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.AirlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Airline\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.AirlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBNumber {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.AWBNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBNumber\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.AWBNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AWBDate {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.AWBDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AWBDate\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.AWBDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shipper {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.ShipperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shipper\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.ShipperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CWT {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.CWTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CWT\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.CWTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WTCHG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.WTCHGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WTCHG\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.WTCHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALCHG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.VALCHGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VALCHG\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.VALCHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DueAL {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.DueALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueAL\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.DueALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INS {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.INSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INS\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.INSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSC {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.FSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSC\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.FSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubTotal {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EVAT {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.EVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EVAT\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.EVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetCHG {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.NetCHGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetCHG\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.NetCHGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PP {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.PPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PP\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.PPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CC {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.CCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CC\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.CCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PX {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.PXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PX\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.PXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EntBy {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.EntByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntBy\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.EntByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EntDate {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.EntDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntDate\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.EntDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EntTime {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.EntTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntTime\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.EntTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Logo {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentCode {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.AgentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentCode\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.AgentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentName {
                get {
                    try {
                        return ((string)(this[this.tabledtrptDSR1.AgentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgentName\' in table \'dtrptDSR1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtrptDSR1.AgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemOnNull() {
                return this.IsNull(this.tabledtrptDSR1.SystemOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemOnNull() {
                this[this.tabledtrptDSR1.SystemOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSystemOffNull() {
                return this.IsNull(this.tabledtrptDSR1.SystemOffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSystemOffNull() {
                this[this.tabledtrptDSR1.SystemOffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAirlineNull() {
                return this.IsNull(this.tabledtrptDSR1.AirlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAirlineNull() {
                this[this.tabledtrptDSR1.AirlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBNumberNull() {
                return this.IsNull(this.tabledtrptDSR1.AWBNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBNumberNull() {
                this[this.tabledtrptDSR1.AWBNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAWBDateNull() {
                return this.IsNull(this.tabledtrptDSR1.AWBDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAWBDateNull() {
                this[this.tabledtrptDSR1.AWBDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipperNull() {
                return this.IsNull(this.tabledtrptDSR1.ShipperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipperNull() {
                this[this.tabledtrptDSR1.ShipperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCWTNull() {
                return this.IsNull(this.tabledtrptDSR1.CWTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCWTNull() {
                this[this.tabledtrptDSR1.CWTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWTCHGNull() {
                return this.IsNull(this.tabledtrptDSR1.WTCHGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWTCHGNull() {
                this[this.tabledtrptDSR1.WTCHGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALCHGNull() {
                return this.IsNull(this.tabledtrptDSR1.VALCHGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALCHGNull() {
                this[this.tabledtrptDSR1.VALCHGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueALNull() {
                return this.IsNull(this.tabledtrptDSR1.DueALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueALNull() {
                this[this.tabledtrptDSR1.DueALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSNull() {
                return this.IsNull(this.tabledtrptDSR1.INSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSNull() {
                this[this.tabledtrptDSR1.INSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSCNull() {
                return this.IsNull(this.tabledtrptDSR1.FSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSCNull() {
                this[this.tabledtrptDSR1.FSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tabledtrptDSR1.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tabledtrptDSR1.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEVATNull() {
                return this.IsNull(this.tabledtrptDSR1.EVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEVATNull() {
                this[this.tabledtrptDSR1.EVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tabledtrptDSR1.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tabledtrptDSR1.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetCHGNull() {
                return this.IsNull(this.tabledtrptDSR1.NetCHGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetCHGNull() {
                this[this.tabledtrptDSR1.NetCHGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPNull() {
                return this.IsNull(this.tabledtrptDSR1.PPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPNull() {
                this[this.tabledtrptDSR1.PPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCNull() {
                return this.IsNull(this.tabledtrptDSR1.CCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCNull() {
                this[this.tabledtrptDSR1.CCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPXNull() {
                return this.IsNull(this.tabledtrptDSR1.PXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPXNull() {
                this[this.tabledtrptDSR1.PXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntByNull() {
                return this.IsNull(this.tabledtrptDSR1.EntByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntByNull() {
                this[this.tabledtrptDSR1.EntByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntDateNull() {
                return this.IsNull(this.tabledtrptDSR1.EntDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntDateNull() {
                this[this.tabledtrptDSR1.EntDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntTimeNull() {
                return this.IsNull(this.tabledtrptDSR1.EntTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntTimeNull() {
                this[this.tabledtrptDSR1.EntTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tabledtrptDSR1.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tabledtrptDSR1.LogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientNameNull() {
                return this.IsNull(this.tabledtrptDSR1.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientNameNull() {
                this[this.tabledtrptDSR1.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentCodeNull() {
                return this.IsNull(this.tabledtrptDSR1.AgentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentCodeNull() {
                this[this.tabledtrptDSR1.AgentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNameNull() {
                return this.IsNull(this.tabledtrptDSR1.AgentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNameNull() {
                this[this.tabledtrptDSR1.AgentNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtrptDSRRowChangeEvent : global::System.EventArgs {
            
            private dtrptDSRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSRRowChangeEvent(dtrptDSRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtrptDSR1RowChangeEvent : global::System.EventArgs {
            
            private dtrptDSR1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSR1RowChangeEvent(dtrptDSR1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtrptDSR1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591