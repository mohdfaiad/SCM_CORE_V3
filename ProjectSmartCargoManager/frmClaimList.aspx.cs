using System;using System.Collections.Generic;using System.Linq;using System.Web;using System.Web.UI;using System.Web.UI.WebControls;using QID.DataAccess;using System.Data;using System.Data.SqlClient;using System.Configuration;using System.Drawing;namespace ProjectSmartCargoManager{    public partial class frmClaimList : System.Web.UI.Page    {        #region Variables        SQLServer db = new SQLServer(Global.GetConnectionString());        string gvUniqueID = String.Empty;        int gvNewPageIndex = 0;        int gvEditIndex = -1;        #endregion        #region Page Load        protected void Page_Load(object sender, EventArgs e)        {            try            {                if (!IsPostBack)                {                    txtToDate.Text = DateTime.Now.ToString("dd/MM/yyyy");                    txtFromDate.Text = DateTime.Now.ToString("dd/MM/yyyy");                    //Set default flight prefix if any.                    if (Session["awbPrefix"] != null)                        txtAWBPrefix.Text = Session["awbPrefix"].ToString();                }            }            catch (Exception ex)            { }        }        #endregion        #region Button List        protected void btnList_Click(object sender, EventArgs e)        {            try            {                lblStatus.Text = "";                grdClaimList.DataSource = null;                grdClaimList.DataBind();                ValidateControls();                string AWBNo = txtAWBNo.Text;                string ClaimType=string.Empty;                if (ddlClaimType.SelectedIndex != 0)                {                    ClaimType = ddlClaimType.SelectedItem.Text;                }                else                     ClaimType="";                string Status=string.Empty;                if (ddlClaimStatus.SelectedIndex != 0)                { Status = ddlClaimStatus.SelectedItem.Text; }                else                    Status = "";                DateTime FromDate = DateTime.ParseExact(txtFromDate.Text,"dd/MM/yyyy",null);                DateTime ToDate = DateTime.ParseExact(txtToDate.Text, "dd/MM/yyyy", null);                string[] QueryNames = new string[6];                object[] QueryValues = new object[6];                SqlDbType[] QueryTypes = new SqlDbType[6];                QueryNames[0] = "AWBNo";                QueryNames[1] = "ClaimType";                QueryNames[2] = "ClaimStatus";                QueryNames[3] = "FromDate";                QueryNames[4] = "ToDate";                QueryNames[5] = "AWBPrefix";                QueryValues[0] = AWBNo;                QueryValues[1] = ClaimType;                QueryValues[2] = Status;                QueryValues[3] = FromDate.ToString("MM/dd/yyyy");                QueryValues[4] = ToDate.ToString("MM/dd/yyyy");                //Ignore prefix if awb number is not entered.                if (AWBNo != "")                {                    QueryValues[5] = txtAWBPrefix.Text;                }                else                {                    QueryValues[5] = "";                }                QueryTypes[0] = SqlDbType.VarChar;                QueryTypes[1] = SqlDbType.VarChar;                QueryTypes[2] = SqlDbType.VarChar;                QueryTypes[3] = SqlDbType.DateTime;                QueryTypes[4] = SqlDbType.DateTime;                QueryTypes[5] = SqlDbType.VarChar;                DataSet ds = db.SelectRecords("spGetClaimsList", QueryNames, QueryValues, QueryTypes);                if (ds != null)                {                    if (ds.Tables.Count > 0)                    {                        if (ds.Tables[0].Rows.Count > 0)                        {                            grdClaimList.DataSource = ds;                            grdClaimList.DataBind();                        }                        else                        {                            lblStatus.ForeColor = Color.Red;                            lblStatus.Text = "No Records Found!";                        }                    }                    else                    {                        lblStatus.ForeColor = Color.Red;                        lblStatus.Text = "No Records Found!";                    }                }                else                {                    lblStatus.ForeColor = Color.Red;                    lblStatus.Text = "No Records Found!";                }                            }            catch (Exception ex)            { }        }        #endregion        #region Validate Controls        private void ValidateControls()        {            try            {                try                {                    if (txtFromDate.Text.Trim() != "" || txtToDate.Text.Trim() != "")                    {                        DateTime dt1 = DateTime.ParseExact(txtFromDate.Text, "dd/MM/yyyy", null); //DateTime.Parse(txtFromdate.Text);                        DateTime dt2 = DateTime.ParseExact(txtToDate.Text, "dd/MM/yyyy", null); //DateTime.Parse(txtToDate.Text);                        int chk = DateTime.Compare(dt1, dt2);                        if (chk > 0)                        {                            lblStatus.ForeColor = Color.Red;                            lblStatus.Text = "Please enter valid To date";                            txtFromDate.Focus();                            return;                        }                    }                }                catch (Exception ex)                {                    lblStatus.ForeColor = Color.Red;                    lblStatus.Text = "Please enter valid date format ex:dd/MM/yyyy";                    txtFromDate.Focus();                    return;                }            }            catch (Exception ex)            {                lblStatus.Text = ex.Message;                lblStatus.ForeColor = Color.Red;                return;            }        }        #endregion        #region btnClear_Click        protected void btnClear_Click(object sender, EventArgs e)        {            try            {                Response.Redirect("~/frmClaimList.aspx");            }            catch (Exception)            {            }        }        #endregion btnClear_Click        #region grdClaimList_RowCommand         protected void grdClaimList_RowCommand(object sender, GridViewCommandEventArgs e)        {            try            {                lblStatus.Text = string.Empty;                if (e.CommandName == "Download")                {                    SQLServer db = new SQLServer(Global.GetConnectionString());                    DataSet ds = db.SelectRecords("spGetClaimDocument", "ClaimID", e.CommandArgument.ToString(), SqlDbType.VarChar);                    if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)                    {                        //Byte[] Invoice = (Byte[])ds.Tables[0].Rows[0]["Invoice"];                        //Byte[] PackagingList = (Byte[])ds.Tables[0].Rows[0]["PackagingList"];                        //Byte[] CustomsReport = (Byte[])ds.Tables[0].Rows[0]["CustomsReport"];                        //Byte[] SubrogationLetter = (Byte[])ds.Tables[0].Rows[0]["SubrogationLetter"];                        //Byte[] SurveryReport = (Byte[])ds.Tables[0].Rows[0]["SurveyReport"];                        //Byte[] AurhorityReport = (Byte[])ds.Tables[0].Rows[0]["AuthorityReport"];                        //Byte[] StationReport = (Byte[])ds.Tables[0].Rows[0]["StationReport"];                        //Byte[] Picture = (Byte[])ds.Tables[0].Rows[0]["Picture"];                        string Invoice = (string)ds.Tables[0].Rows[0]["InvoiceFileName"];                        string PackagingList = (string)ds.Tables[0].Rows[0]["PackagingFileName"];                        string CustomsReport = (string)ds.Tables[0].Rows[0]["CustomsReportFileName"];                        string SubrogationLetter = (string)ds.Tables[0].Rows[0]["SubrogationLetterFileName"];                        string SurveryReport = (string)ds.Tables[0].Rows[0]["SurveyReportFileName"];                        string AurhorityReport = (string)ds.Tables[0].Rows[0]["AuthorityReportFileName"];                        string StationReport = (string)ds.Tables[0].Rows[0]["StationReportFileName"];                        string Picture = (string)ds.Tables[0].Rows[0]["PictureFileName"];                        string DocList = string.Empty;                        if (Invoice != string.Empty && Invoice.Length > 0)                        {                            DocList = "Invoice";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["InvoiceFileName"]);                            //Response.BinaryWrite(Invoice);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=Invoice";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (PackagingList != string.Empty && PackagingList.Length > 0)                        {                            DocList += ",PackagingList";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["PackagingFileName"]);                            //Response.BinaryWrite(PackagingList);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=PackagingList";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (CustomsReport != string.Empty && CustomsReport.Length > 0)                        {                            DocList += ",CustomsReport";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["CustomsReportFileName"]);                            //Response.BinaryWrite(CustomsReport);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=CustomsReport";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (SubrogationLetter != string.Empty && SubrogationLetter.Length > 0)                        {                            DocList += ",SubrogationLetter";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["SubrogationLetterFileName"]);                            //Response.BinaryWrite(SubrogationLetter);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=SubrogationLetter";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (SurveryReport != null && SurveryReport.Length > 0)                        {                            DocList += ",SurveyReport";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["SurveryReportFileName"]);                            //Response.BinaryWrite(SurveryReport);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=SurveyReport";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (AurhorityReport != null && AurhorityReport.Length > 0)                        {                            DocList += ",AuthorityReport";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["AurhorityReportFileName"]);                            //Response.BinaryWrite(AurhorityReport);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=AuthorityReport";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (StationReport != null && StationReport.Length > 0)                        {                            DocList += ",StationReport";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["StationReportFileName"]);                            //Response.BinaryWrite(StationReport);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=StationReport";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (Picture != null && Picture.Length > 0)                        {                            DocList += ",Picture";                            //Response.Clear();                            //Response.AddHeader("content-disposition", "attachment; filename=" + ds.Tables[0].Rows[0]["PictureFileName"]);                            //Response.BinaryWrite(Picture);                            //string url = "ClaimsDownload.aspx?ClaimID=" + e.CommandArgument.ToString() + "&DocType=Picture";                            //string s = "window.open('" + url + "', 'popup_window', 'width=300,height=100,left=100,top=100,resizable=yes');";                            //ClientScript.RegisterStartupScript(this.GetType(), "script", s, true);                        }                        if (DocList != string.Empty)                        {                            Page.ClientScript.RegisterStartupScript(this.GetType(), "client", "DownloadDocs('" + e.CommandArgument.ToString() + "','" + DocList + "');", true);                        }                    }                  }            }            catch (Exception ex)            { }                    }        #endregion    }}