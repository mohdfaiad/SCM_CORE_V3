using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Microsoft.Reporting.WebForms;
using System.Data;
using System.IO;
using System.Configuration;
using System.Net;
using System.Net.Mail;
using System.Net.NetworkInformation;

namespace ProjectSmartCargoManager
{
    public partial class showBillingExcel : System.Web.UI.Page
    {
        ReportDataSource rds1 = new ReportDataSource();
        ReportDataSource rds2 = new ReportDataSource();
        DataTable dtTable1 = new DataTable();
        DataTable dtTable2 = new DataTable();
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                
                dtTable1 = (DataTable)Session["ShowExcel"];
                dtTable2 = (DataTable)Session["ShowExcelHeader"];

                ReportViewer1.Visible = true;

                ReportViewer1.Reset();

                ReportViewer1.ProcessingMode = ProcessingMode.Local;

                LocalReport rep1 = ReportViewer1.LocalReport;

                rep1.ReportPath = Server.MapPath("/Reports/Billing1.rdlc");
               // rep1.ReportPath = System.Configuration.ConfigurationManager.AppSettings["ReportPath"] + "Billing1.rdlc";

                rds1.Name = "dsBilling_DataTable1";
                rds1.Value = dtTable1;
                rep1.DataSources.Add(rds1);

                ReportViewer1.LocalReport.SubreportProcessing += new SubreportProcessingEventHandler(ItemsSubreportProcessingEventHandler);

                //Code to Save the generated Excel file
                SaveAgentInvoice();

            }
            catch (Exception ex)
            {

            }
        }

        //Contains code to "Save" Agent Invoice xls file, send it as attachment and "Delete" Agent Invoice xls file from disk
        protected void SaveAgentInvoice()
        {
            //Code to Save xls file
            Microsoft.Reporting.WebForms.Warning[] warnings;
            string[] streamids;
            string mimeType;
            string encoding;
            string extension;
            Byte[] bytes;
            bytes = ReportViewer1.LocalReport.Render("Excel", string.Empty, out mimeType, out encoding,
                        out extension, out streamids, out warnings);
            FileStream fs = new FileStream(@"c:\AgentInvoice.xls", FileMode.Create);
            fs.Write(bytes, 0, bytes.Length);
            fs.Close();

            //Code to send it as attachment in mail
            SendMail();

            //Code to Delete Agent Invoice xls file
            string filePath = @"c:\AgentInvoice.xls";
            if (System.IO.File.Exists(filePath))
            {
                System.IO.File.Delete(filePath);
            }
        }

        public void ItemsSubreportProcessingEventHandler(object sender, SubreportProcessingEventArgs e)
        {
            e.DataSources.Add(new ReportDataSource("dsBilling_DataTable2",dtTable2));
        }

        public bool SendMail()
        {
            try
            {
                MailMessage Mail = new MailMessage();
                Mail.From = new MailAddress(ConfigurationManager.AppSettings["FromAddress"].ToString());
                Mail.To.Add(new MailAddress(ConfigurationManager.AppSettings["ToAddress"].ToString()));
                Mail.Subject = " Agent Invoice ";
                Mail.IsBodyHtml = true;


                string Body = "Hello,<br/><br/><br/>";
                Body += "Please find the attached Agent Invoice<br/><br/>";
                Body += "Thanks,<br/>QID Cargo Team<br/><br/><br/>";
                Body += "Note: This is as autogenerated E-mail. Please do not reply.";

                Mail.Body = Body.ToString();


                /* Get the file name */
                string strFileName = @"c:\AgentInvoice.xls";
                System.Net.Mail.Attachment attach= new System.Net.Mail.Attachment(strFileName);
                /* Attach the newly created email attachment */
                Mail.Attachments.Add(attach);
                /* Store the attach filename so we can delete it later */
                string attach1 = strFileName;

                SmtpClient smtp = new SmtpClient("smtpout.secureserver.net", 25);
                string from = ConfigurationManager.AppSettings["FromAddress"].ToString();
                string pass = ConfigurationManager.AppSettings["Pass"].ToString();
                smtp.Credentials = new NetworkCredential(from, pass);
                Mail.Priority = MailPriority.High;

                smtp.Send(Mail);
                Mail.Dispose();
                return true;
            }
            catch (Exception ex)
            {
                return false;
            }
        }

    


        protected void Button1_Click(object sender, EventArgs e)
        {
           
        }
    }
}
